<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 个人主页</title>
    <link>http://lalalaxiaowifi.gitee.io/pictures/posts/</link>
    <description>Recent content in Posts on 个人主页</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2020-2099</copyright>
    <lastBuildDate>Wed, 06 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://lalalaxiaowifi.gitee.io/pictures/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>idea相关配置及其缓存清理</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/idea%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE%E5%8F%8A%E5%85%B6%E7%BC%93%E5%AD%98%E6%B8%85%E7%90%86/</link>
      <pubDate>Wed, 06 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/idea%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE%E5%8F%8A%E5%85%B6%E7%BC%93%E5%AD%98%E6%B8%85%E7%90%86/</guid>
      <description>主要针对mac idea.vmoptions 进行设置
 配置 通过idea 会根据电脑 自动设置一个 缓存之类下设置。
默认（灰色标识） JetBrains 提供的默认设置：
1-Xms128m 2-Xmx750m 3-XX:MaxPermSize=350m 4-XX:ReservedCodeCacheSize=240m 5-XX:+UseCompressedOops Big（大）（红色标识） 给 Xmx 配 4096MB， ReservedCodeCacheSize 设置 1024MB，这已经是相当多的内存了：
1-Xms1024m 2-Xmx4096m 3-XX:ReservedCodeCacheSize=1024m 4-XX:+UseCompressedOops Balanced(平衡的)（蓝色标识） Xmx 和 Xms 都分配 2GB ，这是相当平衡的内存消耗：
1-Xms2g 2-Xmx2g 3-XX:ReservedCodeCacheSize=1024m 4-XX:+UseCompressedOops Sophisticated（复杂的）（橘色标识） 和上面一样， Xmx 和 Xms 都分配2GB，但是给 GC 和内存管理指定不同的垃圾回收器和许多不同的标志：
1-server 2-Xms2g-Xmx2g 3-XX:NewRatio=3-Xss16m 4-XX:+UseConcMarkSweepGC 5-XX:+CMSParallelRemarkEnabled 6-XX:ConcGCThreads=4 7-XX:ReservedCodeCacheSize=240m 8-XX:+AlwaysPreTouch 9-XX:+TieredCompilation 10-XX:+UseCompressedOops 11-XX:SoftRefLRUPolicyMSPerMB=50 12-Dsun.io.useCanonCaches=false 13-Djava.net.preferIPv4Stack=true 14-Djsse.enableSNIExtension=false 15-ea idea.vmoptions 比如Android的idea.vmoptions这个文件，一般都会在根目录。如果根目录没有。
 状态栏-&amp;gt;help-&amp;gt;edit custom vm option.</description>
    </item>
    
    <item>
      <title>java8 新特性</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/java8-%E6%96%B0%E7%89%B9%E6%80%A7/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/java8-%E6%96%B0%E7%89%B9%E6%80%A7/</guid>
      <description>Lambda 表达式 lambda表达式 允许我们将行为传到函数中，之前只能选择匿名内部类，现在可以直接使用lambda表达式。
1 2// 1. 不需要参数,返回值为 5 3() -&amp;gt; 5 4 5// 2. 接收一个参数(数字类型),返回其2倍的值 6x -&amp;gt; 2 * x 7 8// 3. 接受2个参数(数字),并返回他们的差值 9(x, y) -&amp;gt; x – y 10 11// 4. 接收2个int型整数,返回他们的和 12(int x, int y) -&amp;gt; x + y 13 14// 5. 接受一个 string 对象,并在控制台打印,不返回任何值(看起来像是返回void) 15(String s) -&amp;gt; System.out.print(s) 16// 6 接收一个值，返回一个值 17( x) -&amp;gt; { 18 System.out.print(&amp;#34;QQQQQ&amp;#34;); 19 return x + x*0.05; 20 } 21 22// 对集合继续迭代 23 List&amp;lt;String&amp;gt; languages = Arrays.</description>
    </item>
    
    <item>
      <title>PropertyChangeListener关联属性的简单介绍</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/propertychangelistener%E5%85%B3%E8%81%94%E5%B1%9E%E6%80%A7%E7%9A%84%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/propertychangelistener%E5%85%B3%E8%81%94%E5%B1%9E%E6%80%A7%E7%9A%84%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/</guid>
      <description>JavaBean的属性与一般Java程序中所指的属性，或者说与所有面向对象的程序设计语言中对象的属性是一个概念，在程序中的具体体现就是类中的变量。在JavaBean的设计中，按照属性的不同作用又细分为四类：单值属性；索引属性；*关联属性*；限制属性。
　本文主要介绍如何使用PropertyChangeSupport类来支持关联属性事件的触发。
1．关联属性 　关联属性，也称之为绑定属性。绑定属性会在属性值发生变化时，通知所有相关的监听器。为了实现一个绑定属性，必须实现两个机制。
　1）　无论何时，只要属性的值发生变化，该bean必须发送一个PropertyChange事件给所有已注册的监听器。该变化可能发生在调用set方法时，或者程序的用户做出某种动作时。
　2）　为了使感兴趣的监听器能够进行注册，bean必须实现以下两个方法：
  1void addPropertyChangeListener(PropertyChangeListener listener);   1void removePropertyChangeListener(PropertyChangeListener listener);   2．使用PropertyChangeSupport 管理 监听器 　可以通过java.bean包下的PropertyChangeSupport类来管理监听器。要使用这个类，bean必须有一个此类的数据域。
  1private PropertyChangeSupport changes = new PropertyChangeSupport(this);   　这样就可以将添加和移除监听器的任务交给这个对象。
  1public void addPropertyChangeListener(PropertyChangeListener listener) {   1　changes.addPropertyChangeListener(listener);   1}   1public void removePropertyChangeListener(PropertyChangeListener listener) {   1　changes.removePropertyChangeListener(listener);   1}    当bean的属性发生变化时，使用PropertyChangeSupport对象的firePropertyChange方法，它会将一个事件发送给所有已经注册的监听器。该方法有三个参数：属性的名字、旧的值以及新的值。属性的值必须是对象，如果是简单数据类型，则必须进行包装。</description>
    </item>
    
    <item>
      <title>Rxjava观察者</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/rxjava%E5%88%9B%E5%BB%BA%E8%A7%82%E5%AF%9F%E8%80%85/</link>
      <pubDate>Mon, 04 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/rxjava%E5%88%9B%E5%BB%BA%E8%A7%82%E5%AF%9F%E8%80%85/</guid>
      <description>前言 本Demo 主要是针对 Rxjava Android 版本进行实践
Rxjava Android 版本 github 地址 Rxjava 地址 Rxjava 官方文档地址 观察者创建 observer  2.0 import io.reactivex.Observer; 观察者用于接收 被观察者提供的数据信息。暂时不清楚被观察者调用其他观察者的逻辑。
  new Observer&amp;lt;泛型&amp;gt;(){};需要需要实现方法。Android上网络请求通常使用这个就好了。  其他观察者 其他观察者 2.2.20 提供观察者 位于io.reactivex.functions 包下 
 Action BiConsumer BiFunction BiPredicate BooleanSupplier Cancellable Consumer Function Function3 Function4 Function5 Function6 Function7 Function8 Function9 IntFunction LongConsumer Predicate  action 一个类似于Runnable的功能接口，但允许抛出一个已检查的异常。
1 2 </description>
    </item>
    
    <item>
      <title>关于JAVA中使用测试</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/%E5%85%B3%E4%BA%8Ejava%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B5%8B%E8%AF%95%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Mon, 04 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/%E5%85%B3%E4%BA%8Ejava%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B5%8B%E8%AF%95%E4%BB%A3%E7%A0%81/</guid>
      <description>前言  最近认真工作(摸鱼)的时候，突然想起来之前立的诸多flag，其中就有
 1 testImplementation &amp;#39;junit:junit:4.12&amp;#39; 2 androidTestImplementation &amp;#39;com.android.support.test:runner:1.0.2&amp;#39; 3 androidTestImplementation &amp;#39;com.android.support.test.espresso:espresso-core:3.0.2&amp;#39; 这个调调还是蛮熟悉的，虽然没有怎么用过，每次创建应用的时候都会默认添加，虽然版本不一样。最近看熟悉Rxjava,然后JAVA版本的Demo就是 在test包下。 test包在src 下面。
正文 上面的那个是Android的，但是Rxjava的却不一样。
 JUnit 4 文档地址 junit 4github 地址 Java的面向程序员的测试框架。 mockito github 地址 最受欢迎的用Java编写的用于单元测试的Mocking框架 testng  TestNG是一个受JUnit和NUnit启发的测试框架，但引入了一些使其更强大且更易于使用的新功能 guava   </description>
    </item>
    
    <item>
      <title>Rxjava使用CompositeDisposable进行统一注销监听</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/rxjava%E4%B8%ADcompositedisposable%E8%BF%9B%E8%A1%8C%E7%BB%9F%E4%B8%80%E5%A4%84%E7%90%86%E6%B3%A8%E9%94%80/</link>
      <pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/rxjava%E4%B8%ADcompositedisposable%E8%BF%9B%E8%A1%8C%E7%BB%9F%E4%B8%80%E5%A4%84%E7%90%86%E6%B3%A8%E9%94%80/</guid>
      <description>前言 本Demo 主要是针对 Rxjava Android 版本进行实践
Rxjava Android 版本 github 地址 Rxjava 地址 Rxjava 官方文档地址 正文  在观察者的回调方法中，有一个onSubscribe(Disposable d) 开始连接方法，Disposable 可以控制是否关闭后面的回调。JAVA 对象是有生命周期的。 这个时候，对于某些监听回调，就可以统一安排处理了。
 1 private final CompositeDisposable mDisposable = new CompositeDisposable(); 2// subscribe 需要使用返回 一个Disposable的那个方法。 3 Disposable md = Observable.create(new ObservableOnSubscribe&amp;lt;Integer&amp;gt;() { 4 @Override 5 public void subscribe(ObservableEmitter&amp;lt;Integer&amp;gt; e) throws Exception { 6 7 } 8 }).subscribe(integer -&amp;gt; Log.e(TAG, &amp;#34;demo2: &amp;#34; + integer)); 9 disposable.add(md); 10 11@Override 12 protected void onStop() { 13 super.</description>
    </item>
    
    <item>
      <title>Rxjava其他运算</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/rxjava%E5%85%B6%E4%BB%96%E8%BF%90%E7%AE%97/</link>
      <pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/rxjava%E5%85%B6%E4%BB%96%E8%BF%90%E7%AE%97/</guid>
      <description>前言 本Demo 主要是针对 Rxjava Android 版本进行实践
Rxjava Android 版本 github 地址 Rxjava 地址 Rxjava 官方文档地址 正文 链式调用 Observable  背压运算符 Backpressure Operators 背压运算符-处理可观察对象的策略，可观察对象的产生速度比观察者消耗它们的速度快 可连接的可观察算子 具有更精确控制的订阅动态的专业可观察物  Connect -指示可连接的Observable开始向其订阅者发送项目 Publish —将普通的Observable转换为可连接的Observable RefCount -使Connectable Observable表现得像普通的Observable Replay —确保所有观察者看到相同的发射项目序列，即使他们在Observable开始发射项目之后进行订阅  运营商转换可观察物  To —将O​​bservable转换为另一个对象或数据结构 Rxjava所有方法 可观察算子的字母顺序列表
Rxjava所有方法 可观察算子的字母顺序列表</description>
    </item>
    
    <item>
      <title>Rxjava创建被观察者Observable</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/rxjava%E5%88%9B%E5%BB%BA%E8%A2%AB%E8%A7%82%E5%AF%9F%E8%80%85/</link>
      <pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/rxjava%E5%88%9B%E5%BB%BA%E8%A2%AB%E8%A7%82%E5%AF%9F%E8%80%85/</guid>
      <description>前言 本Demo 主要是针对 Rxjava Android 版本进行实践
Rxjava Android 版本 github 地址 Rxjava 地址 Rxjava 官方文档地址 正文 Observable 主要是创建一个新的被观察者Observable
Create —通过编程调用观察者方法从头开始创建Observable Defer —在观察者订阅之前不要创建Observable，并为每个观察者创建一个新的Observable Empty/ Never/Throw -创建具有非常精确和限制行为观测量 From —将其他一些对象或数据结构转换为可观察的 Interval —创建一个Observable，它发出以特定时间间隔隔开的整数序列 Just —将一个对象或一组对象转换为发出该对象或那些对象的Observable Range —创建一个Observable，它发出一系列连续整数 Repeat —创建一个Observable，它反复发出特定的项目或项目序列 Start —创建一个Observable，它发出函数的返回值 Timer —创建一个Observable，它在给定的延迟后发出单个项目 Rxjava所有方法 可观察算子的字母顺序列表</description>
    </item>
    
    <item>
      <title>Rxjava数学运算符和聚合运算符Observable</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/%E6%95%B0%E5%AD%A6%E8%BF%90%E7%AE%97%E7%AC%A6%E5%92%8C%E8%81%9A%E5%90%88%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/%E6%95%B0%E5%AD%A6%E8%BF%90%E7%AE%97%E7%AC%A6%E5%92%8C%E8%81%9A%E5%90%88%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>前言 本Demo 主要是针对 Rxjava Android 版本进行实践
Rxjava Android 版本 github 地址 Rxjava 地址 Rxjava 官方文档地址 正文 Observable 对Observable发出的整个项目序列进行操作的运算符
Average —计算Observable发出的数字的平均值，并发出该平均值 Concat —从两个或多个可观测对象发射的发射，而不会相互干扰 Count —计算源Observable发出的项目数，仅发出此值 Max —确定并发出Observable发出的最大价值的物品 Min —确定并发出Observable发出的最小值项 Reduce —将函数依次应用于Observable发出的每个项目，并发出最终值 Sum —计算一个Observable发出的数字的总和，并发出该总和 Rxjava所有方法 可观察算子的字母顺序列表</description>
    </item>
    
    <item>
      <title>Rxjava最简单的使用</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/rxjava-%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/rxjava-%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>前言 本Demo 主要是针对 Rxjava Android 版本进行实践
Rxjava Android 版本 github 地址 Rxjava 地址 Rxjava 官方文档地址 正文 链式调用 Observable 1 Observable.create(new ObservableOnSubscribe&amp;lt;Integer&amp;gt;() { 2 @Override 3 public void subscribe(ObservableEmitter&amp;lt;Integer&amp;gt; e) throws Exception { 4 e.onNext(5); 5 e.onComplete(); 6 } 7 }).observeOn(Schedulers.newThread()).subscribeOn(AndroidSchedulers.mainThread()) 8 .subscribe(new Observer&amp;lt;Integer&amp;gt;() { 9 @Override 10 public void onSubscribe(Disposable d) { 11 12 } 13 14 @Override 15 public void onNext(Integer value) { 16 17 } 18 19 @Override 20 public void onError(Throwable e) { 21 22 } 23 24 @Override 25 public void onComplete() { 26 27 } 28 }); Lambda 表达式版本 1 Observable.</description>
    </item>
    
    <item>
      <title>Rxjava条件运算符和布尔运算符Observable</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/%E6%9D%A1%E4%BB%B6%E8%BF%90%E7%AE%97%E7%AC%A6%E5%92%8C%E5%B8%83%E5%B0%94%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/%E6%9D%A1%E4%BB%B6%E8%BF%90%E7%AE%97%E7%AC%A6%E5%92%8C%E5%B8%83%E5%B0%94%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>前言 本Demo 主要是针对 Rxjava Android 版本进行实践
Rxjava Android 版本 github 地址 Rxjava 地址 Rxjava 官方文档地址 正文 Observable 条件运算符和布尔运算符 评估一个或多个可观察对象或可观察对象发出的项目的运算符
All —确定可观察对象发出的所有项目是否都满足某些条件 Amb —给定两个或多个源Observable，仅从这些Observable中的第一个发出所有项目以发出一个项目 Contains —确定一个Observable是否发出特定项目 DefaultIfEmpty —从源Observable发射项目，如果源Observable不发射任何东西，则为默认项目 SequenceEqual —确定两个可观察对象是否发出相同的项目序列 SkipUntil —丢弃可观察对象发出的物品，直到第二个可观察对象发出物品为止 SkipWhile —丢弃Observable发出的项目，直到指定条件为假 TakeUntil —在第二个Observable发出项目或终止后，丢弃Observable发出的项目 TakeWhile —在指定条件为假之后，丢弃Observable发出的项目 Rxjava所有方法 可观察算子的字母顺序列表</description>
    </item>
    
    <item>
      <title>Rxjava组合结合被观察者Observable</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/rxjava%E7%BB%93%E5%90%88%E7%BB%84%E5%90%88%E8%A2%AB%E8%A7%82%E5%AF%9F%E8%80%85/</link>
      <pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/rxjava%E7%BB%93%E5%90%88%E7%BB%84%E5%90%88%E8%A2%AB%E8%A7%82%E5%AF%9F%E8%80%85/</guid>
      <description>前言 本Demo 主要是针对 Rxjava Android 版本进行实践
Rxjava Android 版本 github 地址 Rxjava 地址 Rxjava 官方文档地址 正文 Observable And/ Then/When -联合组由两个或更多发射观测量项借助于Pattern与Plan中介 CombineLatest —当两个Observable之一发射一个项目时，通过指定的函数合并每个Observable发射的最新项目，并根据此函数的结果发射项目 Join —在根据另一个可观察对象发出的项目定义的时间窗口中，只要发射了一个可观察对象的项目，则合并两个可观察对象发出的项目 Merge -通过合并排放量将多个可观测值合并为一个 StartWith —在开始从源中发出项目之前，发出指定的项目序列 Switch —将发出Observable的Observable转换为发出可观察到的最新事物的单个Observable Zip —通过指定的函数将多个可观测对象的发射合并在一起，并根据此函数的结果为每个组合发射单个项目 Rxjava所有方法 可观察算子的字母顺序列表</description>
    </item>
    
    <item>
      <title>Rxjava转换被观察者Observable</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/rxjava%E8%BD%AC%E6%8D%A2%E8%A2%AB%E8%A7%82%E5%AF%9F%E8%80%85/</link>
      <pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/rxjava%E8%BD%AC%E6%8D%A2%E8%A2%AB%E8%A7%82%E5%AF%9F%E8%80%85/</guid>
      <description>前言 本Demo 主要是针对 Rxjava Android 版本进行实践
Rxjava Android 版本 github 地址 Rxjava 地址 Rxjava 官方文档地址 正文 Observable 主要是转换被观察者Observable
Buffer —定期将来自一个Observable的项目收集成束，然后发出这些束，而不是一次发出一个 FlatMap —将可观察对象发出的项目转换为可观察项目，然后将这些项目的排放平展为单个可观察项目 GroupBy —将一个Observable划分为一组Observable，它们分别与原始Observable发射一组不同的项，并按key进行组织 Map —通过对每个项目应用函数来转换Observable发出的项目 Scan —将函数依次应用于Observable发出的每个项目，并发出每个连续的值 Window —定期将项目从“可观察”窗口细分为“可观察”窗口，然后发出这些窗口，而不是一次发出一个窗口 Rxjava所有方法 可观察算子的字母顺序列表</description>
    </item>
    
    <item>
      <title>Rxjava过滤被观察者Observable</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/rxjava%E8%BF%87%E6%BB%A4%E8%A2%AB%E8%A7%82%E5%AF%9F%E8%80%85/</link>
      <pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/rxjava%E8%BF%87%E6%BB%A4%E8%A2%AB%E8%A7%82%E5%AF%9F%E8%80%85/</guid>
      <description>前言 本Demo 主要是针对 Rxjava Android 版本进行实践
Rxjava Android 版本 github 地址 Rxjava 地址 Rxjava 官方文档地址 正文 Observable 主要是过滤被观察者Observable
Debounce —仅在经过特定时间跨度时才从Observable发出一项，而不发出另一项 Distinct -抑制可观察对象发出的重复项 ElementAt—仅发射可观察对象发射的项目n Filter —仅从可观察对象中发出通过谓词测试的项 First —仅从Observable发射第一项或满足条件的第一项 IgnoreElements —不要从Observable发出任何项目，而是镜像其终止通知 Last —只发射可观察对象发射的最后一个项目 Sample —定期发射Observable发射的最新项目 Skip—抑制Observable发出的前n个项目 SkipLast—抑制Observable发出的最后n个项目 Take—仅发射可观察对象发射的前n个项目 TakeLast—只发射可观察对象发射的最后n个项目 Rxjava所有方法 可观察算子的字母顺序列表</description>
    </item>
    
    <item>
      <title>Rxjava错误处理被观察者Observable</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/rxjava%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E8%A2%AB%E8%A7%82%E5%AF%9F%E8%80%85/</link>
      <pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/rxjava%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E8%A2%AB%E8%A7%82%E5%AF%9F%E8%80%85/</guid>
      <description>前言 本Demo 主要是针对 Rxjava Android 版本进行实践
Rxjava Android 版本 github 地址 Rxjava 地址 Rxjava 官方文档地址 正文 Observable 有助于从Observable的错误通知中恢复的运算符
Catch-onError通过继续执行顺序而没有错误地从通知中恢复 Retry—如果源Observable发送了onError通知，请重新订阅该通知，以希望它可以完成而不会出错 Rxjava所有方法 可观察算子的字母顺序列表</description>
    </item>
    
    <item>
      <title>Rxjava错误处理被观察者Observable</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/%E5%8F%AF%E8%A7%82%E5%AF%9F%E7%9A%84%E5%85%AC%E7%94%A8%E4%BA%8B%E4%B8%9A%E8%BF%90%E8%90%A5%E5%95%86/</link>
      <pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/%E5%8F%AF%E8%A7%82%E5%AF%9F%E7%9A%84%E5%85%AC%E7%94%A8%E4%BA%8B%E4%B8%9A%E8%BF%90%E8%90%A5%E5%95%86/</guid>
      <description>前言 本Demo 主要是针对 Rxjava Android 版本进行实践
Rxjava Android 版本 github 地址 Rxjava 地址 Rxjava 官方文档地址 正文 Observable 一个有用的运算符的工具箱，用于处理Observables
Delay —将排放量从可观察的时间向前移特定量 Do -注册一项行动以应对各种可观察到的生命周期事件 Materialize/Dematerialize —表示发出的项目和作为发出的项目发送的通知，或者逆转此过程 ObserveOn -指定观察者将在其上观察此Observable的调度程序 Serialize -强制Observable进行序列化调用并保持良好行为 Subscribe -根据观测对象的排放和通知进行操作 SubscribeOn —指定Observable订阅时应使用的调度程序 TimeInterval —将发射项目的Observable转换为发射项目，以指示两次发射之间经过的时间 Timeout —镜像源Observable，但如果经过特定时间但没有任何发射项，则发出错误通知 Timestamp —将时间戳记附加到Observable发出的每个项目 Using -创建与可观察对象具有相同使用寿命的可使用资源 Rxjava所有方法 可观察算子的字母顺序列表</description>
    </item>
    
    <item>
      <title>Android中关于Rxjava Flowable相关笔记整理</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/rxjava%E5%85%B3%E4%BA%8Eflowable/</link>
      <pubDate>Wed, 30 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/rxjava%E5%85%B3%E4%BA%8Eflowable/</guid>
      <description>前言 本Demo 主要是针对 Rxjava Android 版本进行实践
Rxjava Android 版本 github 地址 Rxjava 地址 Rxjava 官方文档地址 Rxjava javaDoc地址
正文  如果上游发射的很快而下游处理的很慢，会怎样呢？ 将会产生很多下游没来得及处理的数据，这些数据既不会丢失，也不会被垃圾回收机制回收，而是存放在一个异步缓存池中，如果缓存池中的数据一直得不到处理，越积越多，最后就会造成内存溢出，这便是Rxjava中的背压问题。 Flowable类实现了反应式流模式，并提供了工厂方法，中间运算符以及使用反应式数据流的能力.
 1Flowable.create(new FlowableOnSubscribe&amp;lt;Integer&amp;gt;() { 2 @Override 3 public void subscribe(FlowableEmitter&amp;lt;Integer&amp;gt; emitter) throws Exception { 4 emitter.onNext(1); 5 emitter.onNext(2); 6 emitter.onNext(3); 7 emitter.onNext(4); 8 emitter.onComplete(); 9 } 10 }, BackpressureStrategy.BUFFER).subscribe(new Subscriber&amp;lt;Integer&amp;gt;() { 11 @Override 12 public void onSubscribe(Subscription s) { 13 s.request(Long.MAX_VALUE); 14 System.out.print(&amp;#34;onSubscribe&amp;#34; + s); 15 } 16 17 @Override 18 public void onNext(Integer integer) { 19 System.</description>
    </item>
    
    <item>
      <title>Android中关于Rxjava Flowable相关笔记整理(转载)</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/rxjava%E4%B8%ADflowable%E8%AF%A6%E7%BB%86%E7%AC%94%E8%AE%B0%E8%BD%AC%E8%BD%BD/</link>
      <pubDate>Wed, 30 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/rxjava%E4%B8%ADflowable%E8%AF%A6%E7%BB%86%E7%AC%94%E8%AE%B0%E8%BD%AC%E8%BD%BD/</guid>
      <description>前言 本Demo 主要是针对 Rxjava Android 版本进行实践
Rxjava Android 版本 github 地址 Rxjava 地址 Rxjava 官方文档地址 Rxjava javaDoc地址
正文 数据流发射，处理，响应可能在各自的线程中独立进行，上游在发射数据的时候，不知道下游是否处理完，也不会等下游处理完之后再发射。
这样，如果上游发射的很快而下游处理的很慢，会怎样呢？
将会产生很多下游没来得及处理的数据，这些数据既不会丢失，也不会被垃圾回收机制回收，而是存放在一个异步缓存池中，如果缓存池中的数据一直得不到处理，越积越多，最后就会造成内存溢出，这便是Rxjava中的背压问题。
例如，运行以下代码：
demo1.jpg
创建一个可观察对象Obervable在Schedulers.newThread()()的线程中不断发送数据，而观察者Observer在Schedulers.newThread()的另一个线程中每隔5秒接收一条数据，运行后，查看内存使用如下：
backpressure.gif
由于上下游分别在各自的线程中独立处理数据（如果上下游在同一线程中，下游对数据的处理会堵塞上游数据的发送，上游发送一条数据后会等下游处理完之后再发送下一条），而上游发送数据速度远大于下游接收数据的速度，造成上下游流速不均，导致数据累计，最后引起内存溢出。
Flowable
Flowable是为了解决背压（backpressure）问题，而在Observable的基础上优化后的产物，与Observable不是同一组观察者模式下的成员，Flowable是Publisher与Subscriber这一组观察者模式中Publisher的典型实现，Observable是ObservableSource/Observer这一组观察者模式中ObservableSource的典型实现；
所以在使用Flowable的时候，可观察对象不再是Observable,而是Flowable;观察者不再是Observer，而是Subscriber。Flowable与Subscriber之间依然通过subscribe()进行关联。
有些朋友可能会想，既然Flowable是在Observable的基础上优化后的产物，Observable能解决的问题Flowable都能进行解决，何不抛弃Observable而只用Flowable呢。其实，这是万万不可的，他们各有自己的优势和不足。
由于基于Flowable发射的数据流，以及对数据加工处理的各操作符都添加了背压支持，附加了额外的逻辑，其运行效率要比Observable低得多。
因为只有上下游运行在各自的线程中，且上游发射数据速度大于下游接收处理数据的速度时，才会产生背压问题。
所以，如果能够确定上下游在同一个线程中工作，或者上下游工作在不同的线程中，而下游处理数据的速度高于上游发射数据的速度，则不会产生背压问题，就没有必要使用Flowable，以免影响性能。
通过Flowable发射处理数据流的基础代码如下：
demo2.jpg
执行结果如下：
System.out: 发射----&amp;gt; 1System.out: 发射----&amp;gt; 2System.out: 发射----&amp;gt; 3System.out: 发射----&amp;gt; 完成System.out: 接收----&amp;gt; 1System.out: 接收----&amp;gt; 2System.out: 接收----&amp;gt; 3System.out: 接收----&amp;gt; 完成
我们发现运行结果与Observerable没有区别，但是的代码中，除了为上下游指定各自的运行线程外，还有三点不同
一、create方法中多了一个BackpressureStrategy类型的参数。
二、onSubscribe回调的参数不是Disposable而是Subscription，多了行代码：
s.request(Long.MAX_VALUE);
三、Flowable发射数据时，使用的发射器是FlowableEmitter而不是ObservableEmitter
BackpressureStrategy背压策略
在Flowable的基础创建方法create中多了一个BackpressureStrategy类型的参数，
BackpressureStrategy是个枚举，源码如下：
publicenumBackpressureStrategy { ERROR,BUFFER,DROP,LATEST,MISSING}
其作用是什么呢？
Flowable的异步缓存池不同于Observable，Observable的异步缓存池没有大小限制，可以无限制向里添加数据，直至OOM,而Flowable的异步缓存池有个固定容量，其大小为128。
BackpressureStrategy的作用便是用来设置Flowable通过异步缓存池存储数据的策略。
ERROR
在此策略下，如果放入Flowable的异步缓存池中的数据超限了，则会抛出MissingBackpressureException异常。
运行如下代码：</description>
    </item>
    
    <item>
      <title>Android中关于Rxjava相关笔记整理</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/android%E4%B8%ADrxjava%E7%9B%B8%E5%85%B3%E7%AC%94%E8%AE%B0%E6%95%B4%E7%90%86/</link>
      <pubDate>Wed, 30 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/android/rxjava/android%E4%B8%ADrxjava%E7%9B%B8%E5%85%B3%E7%AC%94%E8%AE%B0%E6%95%B4%E7%90%86/</guid>
      <description>前言 本Demo 主要是针对 Rxjava Android 版本进行实践
Rxjava Android 版本 github 地址 Rxjava 地址 Rxjava 官方文档地址 Rxjava javaDoc地址
正文 被观察者 创建可观察物 产生新的Observable的运算符。
 Create —通过编程调用观察者方法从头开始创建Observable Defer -在观察者订阅之前不要创建Observable，并为每个观察者创建一个新的Observable Empty/ Never/Throw -创建具有非常精确和限制行为观测量 From —将其他一些对象或数据结构转换为可观察的 Interval —创建一个Observable，它发出以特定时间间隔隔开的整数序列 Just —将一个对象或一组对象转换为发出该对象或那些对象的Observable Range —创建一个Observable，它发出一系列连续整数 Repeat —创建一个Observable，它反复发出特定的项目或项目序列 Start —创建一个Observable，它发出函数的返回值 Timer —创建一个Observable，它在给定的延迟后发出单个项目  转换可观察物 转换由Observable发出的项目的运算符。
 Buffer —定期将来自一个Observable的项目收集成束，然后发出这些束，而不是一次发出一个 FlatMap —将可观察对象发出的项目转换为可观察项目，然后将这些项目的排放平展为单个可观察项目 GroupBy —将一个Observable划分为一组Observable，它们分别与原始Observable发射一组不同的项，并按key进行组织 Map —通过对每个项目应用函数来转换Observable发出的项目 Scan —将一个函数依次应用于Observable发出的每个项目，并发出每个连续的值 Window —定期将项目从“可观察”窗口细分为“可观察”窗口，然后发出这些窗口，而不是一次发出一个窗口  过滤可观察物 有选择地从Observable源发出项目的运算符。
 Debounce —仅在经过特定时间跨度时才从Observable中发出一项，而不发出另一项 Distinct -抑制可观察对象发出的重复项 ElementAt —仅发射可观察对象发射的项目n Filter —仅从可观察对象中发出通过谓词测试的项 First —仅从Observable发出第一项或满足条件的第一项 IgnoreElements —不要从Observable发出任何项目，而是镜像其终止通知 Last —只发射可观察对象发射的最后一个项目 Sample —定期发射Observable发射的最新项目 Skip —抑制Observable发出的前n个项目 SkipLast —抑制Observable发出的最后n个项目 Take —仅发射可观察对象发射的前n个项目 TakeLast —只发射可观察对象发射的最后n个项目  结合可观察物 与多个源Observables一起创建单个Observable的运算符</description>
    </item>
    
    <item>
      <title>sql分组查询</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/sql%E5%88%86%E7%BB%84%E6%9F%A5%E8%AF%A2/</link>
      <pubDate>Tue, 29 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/sql%E5%88%86%E7%BB%84%E6%9F%A5%E8%AF%A2/</guid>
      <description>当前笔记复制来源于：https://www.cnblogs.com/friday69/p/9389720.html
 1.SQL分组查询GroupBy+Group_concat group by 是分组，是分组，是分组，分组并不是去重，而是分组
将查询结果按一个或多个进行分组，字段值相同的为一组
GroupBy+Group_concat ： 表示分组之后，根据分组结果，使用 group_contact() 来放置每一组的每字段的值的集合
1select deparmant, GROUP_CONCAT(`name`) from employee GROUP BY deparmant 根据 department 分组，通过 group_concat（&#39;name&#39;）,查看每组里面的姓名都有哪些
1SELECT gender,GROUP_CONCAT(`name`) from employee GROUP BY gender 根据gender 分类，看 不同的 性别都有哪些 人
分组注意事项： 在分组时，select后面跟的的字段一般都会出现在 group by 后
1SELECT name,gender from employee GROUP BY gender,name 2-- 先按gender分组，再按姓名分组...  2.SQL分组+聚合函数 1select deparmant, GROUP_CONCAT(salary), SUM(salary),AVG(salary) 平均工资,MAX(salary) 最高工资 from employee GROUP BY deparmant; 2-- 根据department 分组，计算各部门下工资总数，平均工资，最高工资![1532919789347](D:\Python\python_learning\Python_Blog\02\SQL\4.png) 1-- 查询每个部门的部门名称以及每个部门的人数 2SELECT deparmant, GROUP_CONCAT(`name`), COUNT(*) from employee GROUP BY deparmant 1-- 查询每个部门的部门名称以及每个部门工资大于1500的人数 2SELECT deparmant,GROUP_CONCAT(salary), COUNT(*) from employee WHERE salary &amp;gt; 1500 GROUP BY deparmant 3.</description>
    </item>
    
    <item>
      <title>杂学模块</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E8%B6%85%E7%BA%A7%E8%AE%B0%E5%BF%86%E6%9C%AF/%E8%B6%85%E7%BA%A7%E8%AE%B0%E5%BF%86%E6%9C%AF%E6%A8%A1%E6%9D%BF/</link>
      <pubDate>Tue, 29 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E8%B6%85%E7%BA%A7%E8%AE%B0%E5%BF%86%E6%9C%AF/%E8%B6%85%E7%BA%A7%E8%AE%B0%E5%BF%86%E6%9C%AF%E6%A8%A1%E6%9D%BF/</guid>
      <description></description>
    </item>
    
    <item>
      <title>记忆了解</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E8%B6%85%E7%BA%A7%E8%AE%B0%E5%BF%86%E6%9C%AF/%E8%AE%B0%E5%BF%86%E4%BA%86%E8%A7%A3/</link>
      <pubDate>Tue, 29 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E8%B6%85%E7%BA%A7%E8%AE%B0%E5%BF%86%E6%9C%AF/%E8%AE%B0%E5%BF%86%E4%BA%86%E8%A7%A3/</guid>
      <description> 了解记忆。
    左半球 右半球     分析 视觉   逻辑 想象   顺序 空间   线性 感性   语言 音韵   列表 整体概括   数字能力 色彩感知     记忆在很大程度上遵循的原则是：它现在或者将来某个时刻是否会与我个人有关？   </description>
    </item>
    
    <item>
      <title>fragment生命周期导致数据初始化问题</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/android/fragment%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</link>
      <pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/android/fragment%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</guid>
      <description>前言 话说，activity 和fragment 都是有生命周期的，而且加载也并不是new完对象就加载出来了的，new 一个activity并不多见，但是基于activity new 一个fragment还是很常见的，但是很少有需要在activity中调用fragment方法的时候，但是存在可能性。 因为fragment加载的特性，所以像loading层保证唯一，这样子的就不能直接判断fragmentmanger 中是否包含了，需要一个其他值去判断。而且传参方面，也是这个样子。 比如说我的createPresenter() 方法是当fragment 走oncreate() 的时候创建调用的，但是我上一行代码创建完fragment就直接调用presenter 就会抛空指针异常。
解决思路 思路1 绑定生命周期 我们知道 fragment.getLifecycle().addObserver(observer) 这个可以添加生命周期监听，那么我们对fragment 添加了监听，等走到对应的生命周期的方法才执行对应的代码就好。这样也就避免了，activity 不知道fragment什么时候加载完成导致调用问题了。 但是这种情况下，如果我fragment中再嵌套一个fragment呢？内部的fragment 生命周期万一也关联到外部的activity调用呢？用多个observer去调出来，就是有点怪怪的。那么只能从代码设计上更改了。
思路2 更改设计模式 修改绑定生命周期部分 这个思路肯定是不行的，绑定生命周期就是为了优化内存使用的，而且绑定生命周期也对view的加载显示控制提供了生命范围，防止错误的时间，错误的地点导致操作崩溃。
那就修改功能对应的界面的设计  先说功能吧，对某个数据表进行 折线图，饼图，柱状图等图表的显示，这些图表支持 日周月年的时间切换。先进入某个功能点，确定数据来源，然后选择图表类型，进入下一个界面，最后是选择时间切换。默认加载天的数据。 我就一想，既然每个图表需求显示的view是固定的，那么activity只需要加载一个fragment，由fragment 内部加载不同的图表fragment，图表fragment 只需要显示fragment传入的数据就行。fragment进行数据获取和数据转换，activity进行时间更改转化，然后传入进去。 那么问题就来了，因为activity控制时间，所以第一次的时间需要由activity传入到fragment中，然而，activity并不知道fragment是否加载完成，所以activity需要知道fragment的生命周期，fragment拿到数据知道，也不知道图表fragment是否加载完成，所以也需要拿到生命周期，如果不做延时处理，那么activity就需要拿到两层fragment的生命周期，再传入值。 但是做线程延时，判断生命周期调用，也需要先将 我传入的值存储到两个fragment里面，等到需要的生命周期再显示，这个和我直接通过对象方法传参没有任何区别吧。所以还是生命周期传参导致的问题。 那么就优化设计逻辑，activity 只持有一层图表fragment，图表fragment进行数据拉取和处理显示就好，只是图表层的presenter 需要将所有的功能点的数据全部拉取一遍罢了。当然进行时间切换的时候，也需要判断当前fragment是否加载出来。
 总结 感觉，mvp和mvvm 其实也是一种代码规范，感觉通过activity 向fragment对象方法传参就有点违背了这种规范的初衷吧。所以像eventbus 这种传参，就很实用,完全不需要考虑生命周期，当然Android 提供的广播也是可以的。 EventBus GitHub
activity中注册后，在fragment中就不用再注册监听了，提供方法就直接会调用。因为fragment属于延时加载，所以尽量使用postSticky 。接收：
1 @Subscribe(threadMode = ThreadMode.MAIN, sticky = true) 2 public void onChangeData(ChartDetailsMessage message){ 3 getPresenter().getDatas(message); 4 } </description>
    </item>
    
    <item>
      <title>SQL知识点汇总</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/sql%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB/</link>
      <pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/sql%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB/</guid>
      <description>前言  最近写Demo的时候，经常发现自己对于sql好多都忘记了。
 简单使用  SELECT 查询 后面接查询字段 SELECT DISTINCT 查询 去重 WHERE 多条件查询，用and 连接 and or 多条件查询拼接 order by 对结果进行排序，默认是升序，ORDER BY DESC 降序，ORDER BY 多列（这个多列不是太懂） INSERT INTO 插入数据 UPDATE 更新数据 DELETE 删除数据  进阶  SELECT TOP, LIMIT, ROWNUM 用于规定返回记录的条目数 LIKE like查询 通配符  % 替代0个或者多个字符 &#39;-&#39; 替代一个字符 [charlist] 字符列中的任何单一字符 [^charlist] 或 [!charlist] 不在字符列中的任何单一字符   in 查询，有点类型 数组中的那个 indexof ,可传入同一个字段的多个值 BETWEEN 用于取两个值之间的范围值 两个值用 and 连接 NOT BETWEEN 不在范围内 别名 AS 比如说 name as n ,就是将name设置为 n, JOIN 将两个或者多个表结合起来，基于共同字段。 INNER JOIN 查询条件满足的行 LEFT JOIN 从左表（table1）返回所有的行，即使右表（table2）中没有匹配。如果右表中没有匹配，则结果为 NULL。 RIGHT JOIN 关键字从右表（table2）返回所有的行，即使左表（table1）中没有匹配。如果左表中没有匹配，则结果为 NULL。 FULL OUTER JOIN 关键字只要左表（table1）和右表（table2）其中一个表中存在匹配，则返回行.</description>
    </item>
    
    <item>
      <title>java通用doc文档(类参考手册)生成</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/java%E9%80%9A%E7%94%A8doc%E6%96%87%E6%A1%A3%E7%94%9F%E6%88%90%E5%99%A8/</link>
      <pubDate>Thu, 24 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/java%E9%80%9A%E7%94%A8doc%E6%96%87%E6%A1%A3%E7%94%9F%E6%88%90%E5%99%A8/</guid>
      <description>最近有点懵逼，考试整完了，然后又没有事情做，之前的学习计划拉下了一大片，不知道从何下手，然后医生要我减肥先减20斤，又开始锻炼了。 最近写的账本和之前写的代码，封装太严重了，隔一段时间去看，即使是注释写得还行，但是还是需要再简单整理下才行，于是动了java 代码生成 doc 或者chm 的想法。 其实感觉还是自己注释没有写好，但是呢，搞一个文档什么的，方便自己看，也方便提供给 他人，还是蛮好的。
 chm 这个主要是之前学习的时候，老师会给一个这个文件，然后自己看api也是蛮好的，之前都一直觉得，只要我看代码注释就行，之前都是独立开发或者打下手，独立开发自己懂就行，然后打下手的时候，封装和工具类一般都不是我写，我只需要看git更新，然后去看代码就大概知道加了什么新的东西，而且我有习惯，相关的会写到一个文件里面。 近来，上一个Android走了，来了一个新的大佬，虽然我依旧是打下手的，可能交付和注释没有太清晰。 昨天就开始有这个文档生成的想法了，去掘金沸点也问过，github,baidu 问java doc 大多数都是接口相关的。今天突然想起 我需要的可能是 &amp;quot; 类参考手册&amp;quot;,而不是通俗的java doc ，也不是大佬说的 swagger。 所以，给我提供帮助的是后台大佬，这是小老弟的荣幸。 虽然知道自己需要的可能是chm,但是找不到下手点，网络上的教程还是不是太多，大多数都是java doc的。于是打算从编辑器本身上找，讲道理，我看过太多类参考手册，几乎一模一样，我就不信他不是自动生成的，都2020年了，抓注释这个我理解起来都不难。 由于我用的是idea和Android studio,所以就直接找idea里面的了，
第一个导出为html的位置 个人感觉，这个不适合我。file-&amp;gt;export 通过上面的选项选择，就可以将代码到处为html 文件了，选项很好理解就不介绍了。下面是我导出的文件。 在本地目录:
打开index:
打开JAVA文件:
这个感觉和网络上有些静态资源很像。明显不是我想要的。
第2 种导出方法 tools-&amp;gt;generate java doc 本地目录
index 展示效果 看效果就是我想要的类参考手册的样子，完美，我很喜欢。
注释导致的问题 比如说我这方法。 生成的文档方法详情
可以明显的看出来，注释什么的都还是导出来了的，传入字段的介绍也有，因为我返回值 没有进行介绍，所以就没有返回值介绍。所以如果需要导出的内容完整，方法介绍还是应该写完整的。
运行 这个调调就简单了，我们知道gitee page 支持静态网页,而且这个调调本身就是静态网页，本地运行还是放平台就看自己的想法了
结尾 当然了，你说鸡肋吧，还是没有啥用，但是有的时候还是有点用的，起码只看方法名，传参，返回值，不需要受太长的业务逻辑影响。虽说可能就我不知道这个，但是还是记一下吧。 不说了，我去把注释整完整。
注释头 防止有人想要这个注释头。所以直接提供一个。 1/** 2*························.::::. 3*······················.::::::::. 4*·····················::::::::::: 5*··················..:::::::::::&amp;#39; 6*···············&amp;#39;::::::::::::&amp;#39; 7*·················.:::::::::: 8*············&amp;#39;::::::::::::::.. 9*·················..::::::::::::. 10*···············``:::::::::::::::: 11*················::::``:::::::::&amp;#39;········.:::. 12*···············::::&amp;#39;···&amp;#39;:::::&amp;#39;·······.</description>
    </item>
    
    <item>
      <title>androidSqlite查询思路整理</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/sqlite%E6%9F%A5%E8%AF%A2%E7%8C%9C%E6%83%B3/</link>
      <pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/sqlite%E6%9F%A5%E8%AF%A2%E7%8C%9C%E6%83%B3/</guid>
      <description>前言 今天有一个大佬的公众号推了一篇，sql查询慢的原因。 为什么大家都说SELECT * 效率低 上面是原文。 由于收集癖的原因，同时怕以后找不到了，就复制下觉得重要的部分到自己的笔记里面。
复制内容 一、效率低的原因 先看一下最新《阿里java开发手册（泰山版）》中 MySQL 部分描述：
4 - 1. 【强制】在表查询中，一律不要使用 * 作为查询的字段列表，需要哪些字段必须明确写明。 说明：
增加查询分析器解析成本。
增减字段容易与 resultMap 配置不一致。
无用字段增加网络 消耗，尤其是 text 类型的字段。 开发手册中比较概括的提到了几点原因，让我们深入一些看看：
1. 不需要的列会增加数据传输时间和网络开销 用“SELECT * ”数据库需要解析更多的对象、字段、权限、属性等相关内容，在 SQL 语句复杂，硬解析较多的情况下，会对数据库造成沉重的负担。
增大网络开销；* 有时会误带上如log、IconMD5之类的无用且大文本字段，数据传输size会几何增涨。如果DB和应用程序不在同一台机器，这种开销非常明显
即使 mysql 服务器和客户端是在同一台机器上，使用的协议还是 tcp，通信也是需要额外的时间。
2. 对于无用的大字段，如 varchar、blob、text，会增加 io 操作 准确来说，长度超过 728 字节的时候，会先把超出的数据序列化到另外一个地方，因此读取这条记录会增加一次 io 操作。（MySQL InnoDB）
3. 失去MySQL优化器“覆盖索引”策略优化的可能性 SELECT * 杜绝了覆盖索引的可能性，而基于MySQL优化器的“覆盖索引”策略又是速度极快，效率极高，业界极为推荐的查询优化方式。
例如，有一个表为t(a,b,c,d,e,f)，其中，a为主键，b列有索引。
那么，在磁盘上有两棵 B+ 树，即聚集索引和辅助索引（包括单列索引、联合索引），分别保存(a,b,c,d,e,f)和(a,b)，如果查询条件中where条件可以通过b列的索引过滤掉一部分记录，查询就会先走辅助索引，如果用户只需要a列和b列的数据，直接通过辅助索引就可以知道用户查询的数据。
如果用户使用select *，获取了不需要的数据，则首先通过辅助索引过滤数据，然后再通过聚集索引获取所有的列，这就多了一次b+树查询，速度必然会慢很多。
由于辅助索引的数据比聚集索引少很多，很多情况下，通过辅助索引进行覆盖索引（通过索引就能获取用户需要的所有列），都不需要读磁盘，直接从内存取，而聚集索引很可能数据在磁盘（外存）中（取决于buffer pool的大小和命中率），这种情况下，一个是内存读，一个是磁盘读，速度差异就很显著了，几乎是数量级的差异。
二、索引知识延申 上面提到了辅助索引，在MySQL中辅助索引包括单列索引、联合索引（多列联合），单列索引就不再赘述了，这里提一下联合索引的作用
联合索引 (a,b,c)
联合索引 (a,b,c) 实际建立了 (a)、(a,b)、(a,b,c) 三个索引</description>
    </item>
    
    <item>
      <title>Git 忽略提交 .gitignore</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/git%E5%BF%BD%E7%95%A5%E6%96%87%E4%BB%B6/</link>
      <pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/git%E5%BF%BD%E7%95%A5%E6%96%87%E4%BB%B6/</guid>
      <description>在使用Git的过程中，我们喜欢有的文件比如日志，临时文件，编译的中间文件等不要提交到代码仓库，这时就要设置相应的忽略规则，来忽略这些文件的提交。
规则 作用 /mtk 过滤整个文件夹 *.zip 过滤所有.zip文件 /mtk/do.c 过滤某个具体文件 !/mtk/one.txt 追踪（不过滤）某个具体文件 注意：如果你创建.gitignore文件之前就push了某一文件，那么即使你在.gitignore文件中写入过滤该文件的规则，该规则也不会起作用，git仍然会对该文件进行版本管理。
配置语法  以斜杠“/”开头表示目录； 以星号“*”通配多个字符； 以问号“?”通配单个字符 以方括号“[]”包含单个字符的匹配列表； 以叹号“!”表示不忽略(跟踪)匹配到的文件或目录。 注意： git 对于 .gitignore配置文件是按行从上到下进行规则匹配的  Git 忽略文件提交的方法 有三种方法可以实现忽略Git中不想提交的文件。
在Git项目中定义 .gitignore 文件 这种方式通过在项目的某个文件夹下定义 .gitignore 文件，在该文件中定义相应的忽略规则，来管理当前文件夹下的文件的Git提交行为。
.gitignore 文件是可以提交到共有仓库中，这就为该项目下的所有开发者都共享一套定义好的忽略规则。
在 .gitingore 文件中，遵循相应的语法，在每一行指定一个忽略规则。如：
*.log *.temp /vendor
在Git项目的设置中指定排除文件 这种方式只是临时指定该项目的行为，需要编辑当前项目下的 .git/info/exclude 文件，然后将需要忽略提交的文件写入其中。
需要注意的是，这种方式指定的忽略文件的根目录是项目根目录。
定义Git全局的 .gitignore 文件 除了可以在项目中定义 .gitignore 文件外，还可以设置全局的 git .gitignore 文件来管理所有Git项目的行为。这种方式在不同的项目开发者之间是不共享的，是属于项目之上Git应用级别的行为。
这种方式也需要创建相应的 .gitignore 文件，可以放在任意位置。然后在使用以下命令配置Git：
git config --global core.excludesfile ~/.gitignore
Git 忽略规则 详细的忽略规则可以参考官方英文文档 https://git-scm.com/docs/gitignore
Git 忽略规则优先级 在 .</description>
    </item>
    
    <item>
      <title>Android sqlite多余字段插入导致插入失败</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1sqlite%E6%8F%92%E5%85%A5%E5%A4%9A%E4%BA%8E%E5%AD%97%E6%AE%B5%E5%AF%BC%E8%87%B4%E7%9A%84%E6%8F%92%E5%85%A5%E5%A4%B1%E8%B4%A5/</link>
      <pubDate>Tue, 22 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1sqlite%E6%8F%92%E5%85%A5%E5%A4%9A%E4%BA%8E%E5%AD%97%E6%AE%B5%E5%AF%BC%E8%87%B4%E7%9A%84%E6%8F%92%E5%85%A5%E5%A4%B1%E8%B4%A5/</guid>
      <description>前言 顺着之前的sqlite写的统一插入语句。然后现在是需要多插入一个信息到一个表，由于来源挺多的，所以直接写到bean 中 顺便推一下博客主页
正文 直接上错误。 SQLiteDatabase: Error inserting table expenses has no column named showMessage (Sqlite code 1 SQLITE_ERROR): , while compiling: INSERT INTO expenses(money_china,pay_income_type,expenses_source_v,money,expenses_source,showMessage,name,remark,title,ledger_id,add_time,pay_income_type_v) VALUES (?,?,?,?,?,?,?,?,?,?,?,?), (OS error - 11:Try again) 直接说解决方案。
 直接修改插入的数据，将表中没有的字段移出。 插入的时候直接判断 表字段和插入数据的字段，表中没有的字段就不插入。  通过这个bug.可以很明确感觉到，数据库操作工具，比如说greendao 之类的，通过注解标记是否是表字段就很有用。
结束 谢谢光临，若觉得还行麻烦点一下赞，若觉得写得垃圾，欢迎批评指正。笔者知道自己文笔和表达能力很弱，如果您可以提供点宝贵的意见不胜感激。谢谢。
今天也可以是元气满满的一天哦。 更新需要审核。更新通常优先更新到gitee上面。
博客主页</description>
    </item>
    
    <item>
      <title>统考英语B错题集第一个版本</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E6%BC%8F%E7%BD%91%E4%B9%8B%E9%B1%BC/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E9%94%99%E9%A2%98%E9%9B%86%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%89%88%E6%9C%AC/</link>
      <pubDate>Fri, 18 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E6%BC%8F%E7%BD%91%E4%B9%8B%E9%B1%BC/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E9%94%99%E9%A2%98%E9%9B%86%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%89%88%E6%9C%AC/</guid>
      <description>本笔记主要是记录备注打错了的题目等。错一次就上错题。 本错题主要分为 错一次和错多次，因为涉及多次答题，所以才有这个调调。 同内容分为 交际英语，阅读理解，词汇与结构，完形填空，英译汉。当前不考虑作文
 易错  模糊
 交际英语  would you mind changing seats whit me ? no i do not mind,你可以和我换位置吗？不，我不介意。 what do you think of this novel ? it is well-written,你觉得这本小说咋样。  词汇与结构  (insisted on) he insisted on driving me home,even though i told him i lived nearby, (insisted on doing sth 坚持做某事) 他坚持要开车送我回家，即使我告诉他我住在附近 (to) we come finally to the conclusion that she has been telling lies all the time (come to the conclusion 得出结论).</description>
    </item>
    
    <item>
      <title>电子科技大学统考英语B模拟试卷1</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E6%A8%A1%E6%8B%9F%E9%A2%98/%E7%94%B5%E5%AD%90%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E6%A8%A1%E6%8B%9F%E9%A2%981/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E6%A8%A1%E6%8B%9F%E9%A2%98/%E7%94%B5%E5%AD%90%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E6%A8%A1%E6%8B%9F%E9%A2%981/</guid>
      <description>交际英语  这个要礼貌
 答案: it is three thirty by my watch ,3点20分 excuse me could you tell me the time ? it is three thirty by my watch.
答案: sure,here you are i wonder if i could use your computter tonight? sure ,here you are
答案: let me think 让我想想 一个人问路。
答案: sure here is the key, 一个人借车
答案: cheer up 振作点 一个人考试又没有考过
阅读理解 阅读1  On a practical level, teachers need a wide variety of skills and abilities.</description>
    </item>
    
    <item>
      <title>电子科技大学统考英语B模拟试卷10</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E6%A8%A1%E6%8B%9F%E9%A2%98/%E7%94%B5%E5%AD%90%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E6%A8%A1%E6%8B%9F%E9%A2%9810/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E6%A8%A1%E6%8B%9F%E9%A2%98/%E7%94%B5%E5%AD%90%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E6%A8%A1%E6%8B%9F%E9%A2%9810/</guid>
      <description>交际英语  讲礼貌
 答案: that is very kind of you 你真好 can i get you a cup of tea? 我可以请你喝杯茶吗？
答案:nothing serious 不严重 what is the problem with you bike ? 你的自行车怎么样了？
阅读理解 阅读1  Elvis Aron Presley, often called “the king of rock music”, died on August 16th, 1977, at the age of forty-two. He left a great influence on popular music, and millions of fans. During his lifetime, Elvis sold more than four hundred million records.</description>
    </item>
    
    <item>
      <title>电子科技大学统考英语B模拟试卷2</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E6%A8%A1%E6%8B%9F%E9%A2%98/%E7%94%B5%E5%AD%90%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E6%A8%A1%E6%8B%9F%E9%A2%982/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E6%A8%A1%E6%8B%9F%E9%A2%98/%E7%94%B5%E5%AD%90%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E6%A8%A1%E6%8B%9F%E9%A2%982/</guid>
      <description>交际英语  礼貌是关键
 答案: yes,i am crazy about it 是的，我为此感到疯狂 你喜欢音乐吗
答案: thank you Congratulations 恭喜你，祝贺你
答案:well ,it is ok. 什么东西丢了
阅读理解 阅读1  On a practical level, teachers need a wide variety of skills and abilities. They have to be ready to spend many hours at home planning their lessons and preparing homework. They have to be well organized in class, patient with students, able to appear bright and interested even if they are in fact tired or unhappy, and lively enough to control a group of young people for almost 200 days a year.</description>
    </item>
    
    <item>
      <title>电子科技大学统考英语B模拟试卷3</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E6%A8%A1%E6%8B%9F%E9%A2%98/%E7%94%B5%E5%AD%90%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E6%A8%A1%E6%8B%9F%E9%A2%983/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E6%A8%A1%E6%8B%9F%E9%A2%98/%E7%94%B5%E5%AD%90%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E6%A8%A1%E6%8B%9F%E9%A2%983/</guid>
      <description>交际英语  礼貌
 答案: so do i 我也是 一个人表达一个看法或者想法，
答案:do not have to 一个说必须打车，一个说坐他的车
阅读理解 阅读1  Taking away a city&#39;s rubbish is a big job. Every day trucks come into a city to collect it. Most rubbish is made up of things we can&#39;t eat or use. If we kept these things, we would soon have a mountain of rubbish. In some cities the rubbish is collected and taken outside the city to a dump.</description>
    </item>
    
    <item>
      <title>电子科技大学统考英语B模拟试卷4</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E6%A8%A1%E6%8B%9F%E9%A2%98/%E7%94%B5%E5%AD%90%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E6%A8%A1%E6%8B%9F%E9%A2%984/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E6%A8%A1%E6%8B%9F%E9%A2%98/%E7%94%B5%E5%AD%90%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E6%A8%A1%E6%8B%9F%E9%A2%984/</guid>
      <description>交际英语  礼貌
 答案: yes,please can i have a seat here ,我可以坐这儿吗
答案:Mathematics 数学 what are you majoring in ? 你主修什么
答案: Well, I&#39;m afraid I don&#39;t like seafood ，不喜欢海鲜 Please help yourself to the seafood 请吃海鲜，
阅读理解 阅读1  Modern life is impossible without traveling. The fastest way of traveling is by plane. With a modern airliner you can travel in one day to places which it takes a month or more to get to a hundred years ago.</description>
    </item>
    
    <item>
      <title>电子科技大学统考英语B模拟试卷5</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E6%A8%A1%E6%8B%9F%E9%A2%98/%E7%94%B5%E5%AD%90%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E6%A8%A1%E6%8B%9F%E9%A2%985/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E6%A8%A1%E6%8B%9F%E9%A2%98/%E7%94%B5%E5%AD%90%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E6%A8%A1%E6%8B%9F%E9%A2%985/</guid>
      <description>交际英语  礼貌
 答案: Of course Could you spare me a few minutes?
答案:How did that happen? Did you know that David injured his leg yesterday? 您知道大卫昨天受伤了吗？
答案:Nothing serious 不严重 What&#39;s the problem with your bike? 你的自行车怎么了？
阅读理解 阅读1  Six people were travelling in a compartment（包厢） on a train. Five of them were quiet and well behaved, but the sixth was a rude young man who was causing a lot of trouble to the other passengers.</description>
    </item>
    
    <item>
      <title>电子科技大学统考英语B模拟试卷6</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E6%A8%A1%E6%8B%9F%E9%A2%98/%E7%94%B5%E5%AD%90%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E6%A8%A1%E6%8B%9F%E9%A2%986/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E6%A8%A1%E6%8B%9F%E9%A2%98/%E7%94%B5%E5%AD%90%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E6%A8%A1%E6%8B%9F%E9%A2%986/</guid>
      <description>交际英语  讲礼貌，拒绝要讲原因
 答案:i am sorry，but i really need it this afternoon 一个人想借自行车一会。
答案:sure may i see your tickets（车票）,please? 我可以看一下你的票吗？
答案:would you like to try it on? 你要试一下吗？ 问这个夹克多少钱
答案:oh,not much 不多,没什么 what`s up? 怎么了
答案:hm,not too bad ,还行，不怎么坏 how&#39;s everything with you ? 最近过的怎么样
阅读理解 阅读1  Peter wondered why he didn&#39;t have many friends. The reason was he was always taking, never giving. One day Peter told Bill, “I&#39;d like to give a party on Saturday, I&#39;d like you to come and bring Martha, too.</description>
    </item>
    
    <item>
      <title>电子科技大学统考英语B模拟试卷7</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E6%A8%A1%E6%8B%9F%E9%A2%98/%E7%94%B5%E5%AD%90%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E6%A8%A1%E6%8B%9F%E9%A2%987/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E6%A8%A1%E6%8B%9F%E9%A2%98/%E7%94%B5%E5%AD%90%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E6%A8%A1%E6%8B%9F%E9%A2%987/</guid>
      <description>交际英语  讲礼貌噢
 答案:thank you if you need me ,just let me know,如果您需要我，请告诉我
阅读理解 阅读1  The Antarctic（南极洲） is actually a desert. It is the only continent on the earth without a river or a lake. The Antarctic is all ice all year round. The warmest temperature ever recorded there is zero, at the South Pole. Explorers used to think that a place so cold would have a heavy snowfall.</description>
    </item>
    
    <item>
      <title>电子科技大学统考英语B模拟试卷8</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E6%A8%A1%E6%8B%9F%E9%A2%98/%E7%94%B5%E5%AD%90%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E6%A8%A1%E6%8B%9F%E9%A2%988/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E6%A8%A1%E6%8B%9F%E9%A2%98/%E7%94%B5%E5%AD%90%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E6%A8%A1%E6%8B%9F%E9%A2%988/</guid>
      <description>交际英语  讲礼貌
 答案: do you want to join us ?你想加入我们吗 we are planning an outing? 我们正在计划郊游吗？
阅读理解 阅读1  He has done what Mohammed Ali did for boxing, Michael Jordan for basketball, Roger Federer for tennis and Tiger Woods for golf. Twenty-three-year-old Michael Phelps has become a phenomenon in swimming. At the 2008 Summer Olympic Games, he won eight gold medals. That was more than the whole Australian team could put together.</description>
    </item>
    
    <item>
      <title>电子科技大学统考英语B模拟试卷9</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E6%A8%A1%E6%8B%9F%E9%A2%98/%E7%94%B5%E5%AD%90%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E6%A8%A1%E6%8B%9F%E9%A2%989/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E6%A8%A1%E6%8B%9F%E9%A2%98/%E7%94%B5%E5%AD%90%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E6%A8%A1%E6%8B%9F%E9%A2%989/</guid>
      <description>交际英语  讲礼貌
 答案:I am a student from Bonn University 我是波恩大学的学生 what do you do ? 你是做什么的
阅读理解 阅读1  Chess must be one of the oldest games in the world. An Arab traveller in India in the year 900 wrote that it was played &#39;long, long ago.&#39; Chess was probably invented in India, and it has been played everywhere from Japan to Europe since 1400. The name &#39;chess&#39; is interesting.</description>
    </item>
    
    <item>
      <title>统考英语B重点单词</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E9%87%8D%E7%82%B9%E5%8D%95%E8%AF%8D/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E9%87%8D%E7%82%B9%E5%8D%95%E8%AF%8D/</guid>
      <description>##大学英语 B 级
重点词汇词性转换 动词变名词 1． V+ tion/sion 结尾 attract 吸引— attraction 有吸引力的事或人；令人向往的地方 conclude —conclusion 结论 compete—competition 竞争，比赛 educate-----education 教育 decide----decision 决定 describe —description 描写，描绘 express 表达 ----expression 词语；表达方式 graduate 毕业— graduation operate 操作，动手术— operation organize----organization 组织 instruct —instruction 指导， 介绍 invent —inventor 发明者 / invention 发明物 invite —invitation 调查 inspire---inspiration 灵感，鼓舞人心的 --- pollute----pollution 污染 predict---prediction 预言 pronounce ---pronunciation 发音 permit 允许 -----permission 允许 suggest- 建议， 暗示 --suggestion 建议 solve 解决 -----solution 解决方法</description>
    </item>
    
    <item>
      <title>统考英语B重点句型</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E9%87%8D%E7%82%B9%E7%9F%AD%E8%AF%AD%E5%8F%A5%E5%9E%8B/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E9%87%8D%E7%82%B9%E7%9F%AD%E8%AF%AD%E5%8F%A5%E5%9E%8B/</guid>
      <description>大学英语B重点短语/句型用法大总结  （答案在每题后括号里）  　1 . cost / take / spend / pay 花费 　花费时间做某事 ： It takes sb some time to do sth . = sb spend some time (in)doing sth .= sb spend some time on sth . 某人花钱买某物 ： sb spend some money on sth . = sb pay some money for sth . = sth cost sb . some money . ※ spend 和 pay 主语都是人， cost 主语是物.</description>
    </item>
    
    <item>
      <title>统考英语B完型填空</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E5%AE%8C%E5%BD%A2%E5%A1%AB%E7%A9%BA/</link>
      <pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E5%AE%8C%E5%BD%A2%E5%A1%AB%E7%A9%BA/</guid>
      <description>选词填空，1篇短文5给小题，每题3分，共15分。 首字母大写 不填入重复答案
 The Internet began more than thirty years ago  The Internet began more than thirty years ago, and its goal was to increase communication among universities, the government and some major American businesses by linking their computers together. The Internet makes it easy for them to send large 21 of information quickly. As time passed, more people began using the Internet. In 1981, the Internet linked 13 computers.</description>
    </item>
    
    <item>
      <title>统考英语B词汇与结构</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E8%AF%8D%E6%B1%87%E4%B8%8E%E7%BB%93%E6%9E%84/</link>
      <pubDate>Tue, 15 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E8%AF%8D%E6%B1%87%E4%B8%8E%E7%BB%93%E6%9E%84/</guid>
      <description>共10分。前55个重点掌握
 下面6分 答案: insisted on he ( insisted on ) driving me home,even though i told him lived nearby.尽管我告诉他我就住在附近，但他任然执意开车送我回家
涉及单词  insisted insist 的过去分词过去式，坚持 even though 尽管 nearby 附近的  答案: to we come finally ( to ) the conclusion that she has been telling lies all the time.我们得出结论是她一直在撒谎
涉及单词  finally 最后 conclusion 结论，结果 telling lies 说谎 all the time 每时每刻，成天  答案: same i won`t make the (same) mistake next time,下次我不会犯同样的错误</description>
    </item>
    
    <item>
      <title>统考英语B阅读理解涉及单词</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E6%B6%89%E5%8F%8A%E5%8D%95%E8%AF%8D/</link>
      <pubDate>Mon, 14 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E6%B6%89%E5%8F%8A%E5%8D%95%E8%AF%8D/</guid>
      <description> story 故事 believe 相信，认为真实，认为有可能，看做 upset 使烦躁，不耐烦，沮丧，失望 disapproval 不赞成 mention 提到，提及，说到 in order to 为了 reason 原因，理由，道理 temper 脾气，情绪 fact 现实，实际情况，真实 bird 鸟 town 镇 lost 丢失，释放 kitchen 厨房 managed 受妥善照顾，受监管的，完成，勉强完成 escape from 逃脱 kindly 体贴的，友善的， treated 以...态度对待 dive in 头朝下跳入水中，潜入 sea 海，海洋 secrets 秘密，机密 undersea 海底 freely 不受限制的。自由的 agree on 对某种事物有着相同的看法 greatest 很好的，极好的，巨大的 wonder 想知道，想明白，琢磨 husband 丈夫 queen 女王，女酋长 disguised 假扮，装扮，伪装 recognized 认识，认出，辨别出。 stale 不新鲜的 fair weather friends 酒肉朋友，不能共患难的朋友 mainly 主要的，首要的，大部分 discussing 讨论，discuss的现在分词。 qualities 品质，质量，优质，人品，素质 murdered 谋杀  </description>
    </item>
    
    <item>
      <title>统考英语B阅读理解第2部分</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%AC%AC2%E9%83%A8%E5%88%86/</link>
      <pubDate>Mon, 14 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%AC%AC2%E9%83%A8%E5%88%86/</guid>
      <description>16篇，10分。
 文章 害羞不快乐的原因 正文内容 Shyness is the cause of much unhappiness for a great many people. Shy people are anxious and self-conscious; that is, they are excessively concerned with their own appearance and actions. Worrisome thoughts are constantly occurring in their minds: what kind of impression am I making? Do they like me? Do I sound stupid? Am I wearing unattractive clothes? 羞怯是许多人不快乐的原因。害羞的人焦虑不安，自我意识强，也就是说，他们过分在意自己的形象和行为。焦虑时常萦绕在他们的脑海中：我给人留下了什么印象?他们喜欢我吗?我让人觉得很傻吗?我的穿着是否不吸引人? It is obvious that such uncomfortable feelings must negatively affect people.</description>
    </item>
    
    <item>
      <title>统考英语B阅读理解第一部分</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86/</link>
      <pubDate>Mon, 14 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86/</guid>
      <description>T 表示正确，F 表示错误
 文章 1 英语正文 Sixteen-year-old Maria was waiting in line at the airport in Santo Domingo. She was leaving her native country to join her sister in the United States. She spoke English very well. Though she was very happy she could go abroad, she was feeling sad at leaving her family and fiends. As she was thinking all about this, she suddenly heard the airline employee asking her to pick up her luggage and put it on the scales（称）.</description>
    </item>
    
    <item>
      <title>统考英语B英译汉</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E8%8B%B1%E7%BF%BB%E6%B1%89%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E8%8B%B1%E7%BF%BB%E6%B1%89%E7%AC%94%E8%AE%B0/</guid>
      <description>本部分共6小题，共30分。翻译句子中一个单词正确会给0.5到1分，整句流畅翻译会给满分，认识一个单纯就写一个单词的意思，确定不会就不要写，只翻译自己会的单词部分。
   in no other country in the world can you find such plants as this one (像这种植物再世界上的其他任何一个国家中都找不到)
  it is very important to maintain your current weight through execise and healthy eating (通过锻炼和健康饮食来保持你目前的体重是非常重要的)
  it normally takes a semester for a college freshman to adjust to his college life,(大学生一般需要花费一个学期来适应大学生活)
  if you decided to learn a new language,you would hava to dedicate youself wholeheartedly to the cause .</description>
    </item>
    
    <item>
      <title>统考英语B英译汉词汇</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E8%8B%B1%E7%BF%BB%E6%B1%89%E8%AF%8D%E6%B1%87/</link>
      <pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E8%8B%B1%E7%BF%BB%E6%B1%89%E8%AF%8D%E6%B1%87/</guid>
      <description>no other 别无其他
such 这样的
plants 植物
this one 这一个
maintain 保持
exercise 活动，锻炼
weight 重量
through 从...一端致另一端，穿透，贯穿，通过...
current 当前的，现在的
normally 通常，正常情况下
takes 携带，拿走，取走，带去
semester 学期
college 学院，职业学校，技术学校，大学
freshman 一年级新生，九年级学生，大学一年级新生
adjust to 调整，调节
college life 大学生活
decided adj：明显的，明白无误的，确实无疑的
v：对...做出决定，决定，选定，裁决，影响或决定结果 decide 的过去分词和过去式
would will的过去式，用于转述，将会，将，带出想象的结果
dedicate 把...奉献给
wholeheartedly 完全同意
cause 原因，起因，理由
differ in 在不同
even if 即使，尽管
personality 性格，个性，人格，魅力，气质，气度，名人
differences 差别，差异，不同，变化
significant 有重大意义，显著的，有某种意义的
suitable 合适的，适宜的
last night 昨晚，最后一晚
hit 击打，撞击，使碰上
wall 城墙，围墙</description>
    </item>
    
    <item>
      <title>2020-12月统考英语测试网站</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E4%B8%93%E5%8D%87%E6%9C%AC%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%AD%E6%B5%8B%E8%AF%95%E7%BD%91%E7%AB%99/</link>
      <pubDate>Mon, 07 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E4%B8%93%E5%8D%87%E6%9C%AC%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%AD%E6%B5%8B%E8%AF%95%E7%BD%91%E7%AB%99/</guid>
      <description>有疑问的对照题库，做完点提交，后面可看对错！ 2020-12-07 09:59:55
 交际用语：交际用语  词汇与结构（带解析版）：词汇与结构 英译汉-重点掌握的60道题：英译汉-重点掌握的60道题 英译汉-也要背的100道题:英译汉-也要背的100道题 阅读理解1，阅读理解1 阅读理解2，阅读理解2 完型填空强记部分完型填空强记部分 完型填空有时间完成的12篇：完型填空有时间完成的12篇  </description>
    </item>
    
    <item>
      <title>统考英语B交际用语</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E4%BA%A4%E9%99%85%E7%94%A8%E8%AF%AD/</link>
      <pubDate>Mon, 07 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E4%BA%A4%E9%99%85%E7%94%A8%E8%AF%AD/</guid>
      <description>交际用语答题要领总结:讲礼貌，多委婉，受帮助，要礼貌，遇坏事，先道歉。最长选项就是答案原则，有比较恐怖或者不认识的单词或者搞不清楚意思的选项就是答案。
 Do you mind of if I switch off the radio ? (no,not at all) go ahead. 翻译
你介意我关闭收音机吗？ 不，不介意，请便。 考点
因为后面的是请便，所以前面应该表示自己不介意。
thanks for the lovely and delicious food，（my pleasure） 翻译
谢谢您提供的美味食物，这是我的荣幸 考点
讲礼貌
excuse me,i am afraid you`ve overcharged me? （oh,really?） 翻译
不好意思，恐怕你多收我钱了
let me introduce myself,i am tom ,(pleased to meet you) 翻译
自我介绍下，我是tom ,很高兴认识你 考点
讲礼貌
hi,george,how are you? (fine,thanks ,and you？) 翻译
嗨，George，你好吗？很好，谢谢，你呢？ 考点</description>
    </item>
    
    <item>
      <title>统考英语B交际用语涉及词汇</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E4%BA%A4%E9%99%85%E7%94%A8%E4%BA%8E%E6%B6%89%E5%8F%8A%E8%AF%8D%E6%B1%87/</link>
      <pubDate>Mon, 07 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E4%BA%A4%E9%99%85%E7%94%A8%E4%BA%8E%E6%B6%89%E5%8F%8A%E8%AF%8D%E6%B1%87/</guid>
      <description>当前笔记关联 统考英语B交际用语
 mind 翻译
n: 头脑，大脑，思考能力，智慧，思维方式，聪明人，有智慧的人。
v:对某事烦恼，苦恼，焦虑，介意，请求允许或者客气的请人做某事。
switch off 翻译
关闭，不再注意，不再担忧，不再想着
radio 翻译
n:无线电广播 v: 发送
go ahead 翻译
先走，请便，开始做，进行，开展
never mind 翻译
没关系，不要介意
no way 翻译
不可能
not at all 翻译
一点也不，没什么，别客气
you`d better not 翻译
最好不要 you`d 可以是you had 和 you would的缩写
lovely 翻译
adj:美丽的，优美的，有吸引力的，令人愉快的，极好的，慷慨大方的，
n:美女，佳人
delicious 翻译
adj: 美味的，可口的，令人开心的
my pleasure 翻译
我的荣幸，不客气的
afraid 翻译
adj：害怕，担心
overcharged 翻译
v：多收某人的钱，overcharge 过去分词和过去式
introduce 翻译
介绍，采用
pleased 翻译</description>
    </item>
    
    <item>
      <title>统考英语B作文小抄</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E4%BD%9C%E4%B8%BA%E5%B0%8F%E6%8A%84/</link>
      <pubDate>Mon, 07 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E4%BD%9C%E4%B8%BA%E5%B0%8F%E6%8A%84/</guid>
      <description>my hometown (我的家乡) My hometown Guangzhou is a very beautiful and modern city in the south of China. It is the capital of Guangdong Province with a long history of more than 2,000 years.Guangzhou is the center of economy, politics and education of the province. Everybody can have a good time here. You can visit a lot of museums, parks and universities here. You can do shopping like crazy in this city.</description>
    </item>
    
    <item>
      <title>cost账本</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E4%B8%AA%E4%BA%BA%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/cost%E8%B4%A6%E6%9C%AC/cost%E8%B4%A6%E6%9C%AC/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E4%B8%AA%E4%BA%BA%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/cost%E8%B4%A6%E6%9C%AC/cost%E8%B4%A6%E6%9C%AC/</guid>
      <description>前言 之前因为某些原因吧，打算做一个个人记账和统计的app,毕竟自己是Android搬砖工，这点小Demo还是可以整的。然后自己整了一半，由于一些原因就放弃了(没钱)，每个月入不敷出的，我写记账的欲望都没有。 什么？你说这就应该开始记账，避免花钱大手大脚的？
顺便推一下博客主页</description>
    </item>
    
    <item>
      <title>学位英语不规则动词</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E4%B8%8D%E8%A7%84%E5%88%99%E5%8A%A8%E8%AF%8D/</link>
      <pubDate>Thu, 26 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E4%B8%8D%E8%A7%84%E5%88%99%E5%8A%A8%E8%AF%8D/</guid>
      <description>不规则动词    不定式 过去式 过去分词 翻译 例子     arise arose arisen 产生于，起因    awake awoke awoken 醒着(尤指入睡前或刚醒)，使醒来，唤起，被唤起    be/is was/were been     bear bore borne,born 承受，忍受，不适于某事，承担责任，熊，(在证券市场等)卖空的人    beat beat beaten 击败，拍，打    become became become 成为，变成，变    begin began begun 开始    bend bent bent 弯曲，弯，瘦    bet bet，betted bet,betted 打赌，下注，敢说，估计，预计    bid bid，bade bid，bidden 出价，投标,努力争取，企图获取，向某人问候 ，道别，告诉，吩咐    bind bound bound 绑定，系，缠绕，使联合，结合，窘境    bite bit bitten 咬，上钩，简单的一餐    bleed bled bled 流血，给某人放血，长期榨取（某人的前）,bleed for 为.</description>
    </item>
    
    <item>
      <title>汉语中的地得的区别</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E6%B1%89%E8%AF%AD%E4%B8%AD%E7%9A%84%E5%9C%B0%E5%BE%973%E8%80%85%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Fri, 20 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E6%B1%89%E8%AF%AD%E4%B8%AD%E7%9A%84%E5%9C%B0%E5%BE%973%E8%80%85%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      <description>汉语中“的、地、得”的区别 的  用在词或词组后表明它前边的词或词组是定语。如：热闹的论坛、平静的湖面等。 代替所指的人或物。如（你是）扔砖的、（我是）挨砖的。 表示所属的关系。如：我的拙劣表现、你的精彩表演。 用在句末常跟“是”相应。如：我挨的砖头是你扔的。 同“地”（de）。这便是我们经常混淆用法的根源，它与“地”的用法在某些时候是相同的。如：我稀里糊涂地挨了一顿砖；我稀里糊涂的挨了几块砖。  地 用在词或词组后，表示它前边的词或词组是状语。如开开心心地聊天儿；严肃认真地跟帖；紧紧地绷住弯得象大弓一样的鱼杆。
得  用在动词后表示可能。如：砸得准；钓得多。 用在动词或形容词后，连接表示结果或程度的补语。如前面所说的一词“挺累得慌”，则是补充说明了“挺累”累到了什么程度（发慌）。  总结 总之，“的”字前面多是定语，以名词、代词、数量词等有名词性质词或词组为主，其后多跟的是名词性词语。而“地”字的用法，多用在形容词的后面作状语，其后多跟动词性词语。至于“得”字的用法较为简单，主要用作补语，当需要补充说明程度或结果的时候使用便可。 “的”、“地”、“得”这三个结构助词怎么用？不能光看它前后是什么词性！
唯一可靠的根据就是句子成份
“的”用在定语与主语或定语与宾语之间。它是定语的标志； “地”用在状语与谓语之间。它是状语的标志； “得”用在谓语与补语之间。它是补语的标志； 千万不能依据前后的词性来确定用哪个（de）。 因为： “的”后面跟的不一定都是名词，如“你现在需要的是认真的反省和冷静的思考。......”
“地”后面跟的不一定都是表示动作的词，如“花儿慢慢地红了......”
“得”前面跟的不一定是动词，如“红得好似一团火”。“得”后面跟的也不一定都是形容词，如“高兴得跳了起来。激动得叫了起来......”</description>
    </item>
    
    <item>
      <title>学位英语词组表A</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8a/</link>
      <pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8a/</guid>
      <description>教材来源 成人高等教育本科生学士学位 英语水平考试大纲 非英语专业 第2版
词组A a few 少许，一些 例子:  I made a few phone calls ,我打几个电话。 I have a few ,but not many,我有几个，但是不多。 I hava a few idea of you,我对你有一些想法。  a great deal / a good deal 许多 大量 例子:  I had friends who gave me a great deal idea and infomation of it;我的朋友们给了我很多关于它的意见和信息。 I had a great money,but now just a few,我曾经有很多钱，但是现在只有一点点了。  a great many/ a good many 许多，大量 多指不屈，应该可以和上面的一起用吧。</description>
    </item>
    
    <item>
      <title>学位英语词组表B</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8b/</link>
      <pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8b/</guid>
      <description>教材来源 成人高等教育本科生学士学位 英语水平考试大纲 非英语专业 第2版
 B  back and forth 来回，往返 例子:
 he paced back and forth ，他来回踱步。 i could see the branches of the trees moving back and forth,我能看到树叶来回摇摆。  back up 支持，援助,证实（某种说法），备份（文件），将什么付诸行动，倒车，（车辆）堵塞，倒行，后退 例子:
 now she has the research to back up her hunch,现在就有一个研究成果支持他的观点 and they both back up her story,并且他们都支持他的观点。 make a point of backing up your files at regular intervals,一定要定期备份文件。  based on 以什么为基础,在什么基础上，以什么为依据 例子:</description>
    </item>
    
    <item>
      <title>学位英语词组表C</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8c/</link>
      <pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8c/</guid>
      <description>教材来源 成人高等教育本科生学士学位 英语水平考试大纲 非英语专业 第2版
 C  call for 要求，需要 例子:
call off 取消 例子:
call on/upan 访问，拜访，号召，呼吁 例子:
call up 召集，动员，打电话 例子:
can not help 禁不住，忍不住 例子:
care for 关心，照顾，喜欢 例子:
carry on 继续，坚持下去，从事，经营 例子:
carry out 执行，贯彻 例子:
catch fire 着火，烧着 例子:
catch up with 追上，赶上 例子:
check in 办理登记手续 例子:
check out 结账后离开 例子:
chear up 解释，澄清、变晴朗 例子:
come about 发生，产生 例子:
come aross 偶遇 例子:</description>
    </item>
    
    <item>
      <title>学位英语词组表DEF</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8def/</link>
      <pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8def/</guid>
      <description>教材来源 成人高等教育本科生学士学位 英语水平考试大纲 非英语专业 第2版
 D  deal with 处理，对付，讨论 例子:
die down 逐渐消失，平息 例子:
die out 消失，灭绝 例子:
differ form 与...不同 例子:
do away with 消灭，丢掉 例子:
do one`s best 尽力而为 例子:
do without 没有...也行，将就 例子:
draw up 写出，画出，草拟 例子:
dress up 穿上盛装，打扮得漂漂亮亮的 例子:
drop by/in 顺便来访 例子:
drop out 逃学，离队，出去 例子:
due to 由于 例子:
E each other 互相 例子:
either.... or... 或...或...,不是....就是... 例子:
enjoy oneself 过的快乐 例子:</description>
    </item>
    
    <item>
      <title>学位英语词组表G</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8g/</link>
      <pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8g/</guid>
      <description>教材来源 成人高等教育本科生学士学位 英语水平考试大纲 非英语专业 第2版
 G  get across 解释清楚的，使人了解的 例子:
get along with 与...相处 例子:
get away (from) 逃脱，逃离 例子:
get hold of 抓住，掌握 例子:
get in 收获 例子:
get off 下车，从....下来，离开，动身，开始 例子:
get on 上车 例子:
get on with 继续做，在...方面取的进展 例子:
get out of 逃避，改掉 例子:
get over 克服，（从病中）恢复过来 例子:
get rid of 摆脱，除去 例子:
get through 结束，完成，接通电话 例子:
get together 集会，聚会 例子:
get up 起床，起立 例子:</description>
    </item>
    
    <item>
      <title>学位英语词组表H</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8h/</link>
      <pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8h/</guid>
      <description>教材来源 成人高等教育本科生学士学位 英语水平考试大纲 非英语专业 第2版
 H  hed better 最好还是，应该 例子:
hand down 传下来 例子:
hand in 例子:
hand in hand 手拉手，联合，连在一起 例子:
hand on 传下来，依次传递 例子:
hand over 交出，移交，让给 例子:
hand about 闲荡，徘徊，逗留 例子:
hand on to 紧握着，坚持下去 例子:
hand on 紧抓不放 例子:
hand up 挂断（电话） 例子:
have back 要回，收回 例子:
have on 穿着，戴着 例子:
have to do with 与...有关 例子:
have to /have got to 不得不，必须 例子:</description>
    </item>
    
    <item>
      <title>学位英语词组表I</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8i/</link>
      <pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8i/</guid>
      <description>教材来源 成人高等教育本科生学士学位 英语水平考试大纲 非英语专业 第2版
 I  if only 要是...就 例子:
in a hurry 匆忙，立刻 例子:
in a moment 一会儿 例子:
in a sense 从某种意义上讲 例子:
in a word 总而言之 例子:
in addition (to) 除...之外，加上 例子:
in advance 提前，预先 例子:
in all 总共，共计 例子:
in any case 总之，无论如何为 例子:
in brief 简单的说 例子:
in case of 假如，万一 例子:
in case 假如，以防 例子:
in charge (of) 负责，管理 例子:
in common 共用，共有 例子:</description>
    </item>
    
    <item>
      <title>学位英语词组表JKL</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8jkl/</link>
      <pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8jkl/</guid>
      <description>教材来源 成人高等教育本科生学士学位 英语水平考试大纲 非英语专业 第2版
 J  just new 刚才，一会儿之前 例子:
 K  keep back 阻止，阻挡，隐瞒，保留 例子:
keep down 控制，压制，压低，放低（声音） 例子:
keep...in mind 把...放到心里 例子:
keep in touch 保持联系 例子:
keep off 不接近，避开 例子:
keep on 继续，保持 例子:
keep one`s word 守信用 例子:
keep out of 躲开，置身事外 例子:
keep up with 跟上，不落后 例子:
keep up 继续，坚持，保持，维持 例子:
keep ... in mind 记住.... 例子:
knock down 撞倒，击倒 例子:
knock out 打昏，淘汰 例子:</description>
    </item>
    
    <item>
      <title>学位英语词组表MN</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8mn/</link>
      <pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8mn/</guid>
      <description>教材来源 成人高等教育本科生学士学位 英语水平考试大纲 非英语专业 第2版
 M  make a difference 有影响的，很重要 例子:
make for 走向，冲向 例子:
make friends （with） 与....交朋友，友好相处 例子:
make fun of 取笑，嘲弄 例子:
make out 开列，书写，看出，辨认出，理解，了解 例子:
make sense 讲的通，言之有理 例子:
make sure 查明，弄明白 例子:
make the most of 充分利用 例子:
make up 拼凑，组成，构成，编造（故事，谎言） 例子:
make up for 补偿，弥补 例子:
make up one`s mind 下定决定，决定 例子:
make use of 利用 例子:
make way 开路，让路 例子:
mix up 混淆 例子:</description>
    </item>
    
    <item>
      <title>学位英语词组表O</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8o/</link>
      <pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8o/</guid>
      <description>教材来源 成人高等教育本科生学士学位 英语水平考试大纲 非英语专业 第2版
 O  of course 自然，当然，无疑 例子:
off and on 断断续续，不时的 例子:
off duty 下班 例子:
on behalf of 代表.... 例子:
on board 在船（飞机）上 例子:
on business 因公，因事 例子:
on duty 值班，当班 例子:
on earth 究竟，到底 例子:
on fire 着火 例子:
on foot 步行 例子:
on hand 在手边，临近 例子:
on one`s own 独自，靠自己 例子:
on purpose 故意，有意 例子:
on sale 上市，出售，减价，贱卖 例子:
on schedule 按预定时间 例子:</description>
    </item>
    
    <item>
      <title>学位英语词组表P</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8p/</link>
      <pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8p/</guid>
      <description>教材来源 成人高等教育本科生学士学位 英语水平考试大纲 非英语专业 第2版
 P  pass away 去世，逝世 例子:
pass on 传递下去 例子:
pass out 失去知觉，昏倒 例子:
pay attention to 注意 例子:
pay back 偿还 例子:
pick out 选出 例子:
pick up 捡起，拾起 例子:
point out 指出 例子:
prefer...to....更喜欢 例子:
pull down... 拉倒 例子:
pull out 拔出，抽出，取出 例子:
pull up 使停下 例子:
put across 解释清楚，说明 例子:
put aside 存储 例子:
put away 把...收起来，放好 例子:
put down 记下，写下 例子:</description>
    </item>
    
    <item>
      <title>学位英语词组表QR</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8qr/</link>
      <pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8qr/</guid>
      <description>教材来源 成人高等教育本科生学士学位 英语水平考试大纲 非英语专业 第2版
 Q  quite a little 相当多，不少 例子:
quite a few 有相当数目的 例子:
 R  rather than 而不，不顾 例子:
rely on 依靠，依耐 例子:
remind sb . of ... 使想起，提起，提醒 例子:
result from 起因于 例子:
result in 导致 例子:
right away 马上，立刻 例子:
ring up 打电话 例子:
rub out 擦掉 例子:
run across 偶然遇到 例子:
run down 撞倒，撞沉 例子:
run for 竞选 例子:
run into 偶然遇到，撞见，碰撞 例子:</description>
    </item>
    
    <item>
      <title>学位英语词组表S</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8s/</link>
      <pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8s/</guid>
      <description>教材来源 成人高等教育本科生学士学位 英语水平考试大纲 非英语专业 第2版
 S  see （to it） that 负责，照料，注意，留心 例子:
see about 调查，查询 例子:
see into 调查，检查 例子:
see off 给...送行 例子:
see through 看穿，识破 例子:
send for 派人请，召唤，索取 例子:
send in 呈报，提交，送来 例子:
serve as 担任，起...作用 例子:
set aside 宣布无效的，驳回，废止 例子:
set back 推迟，延缓，阻碍 例子:
set fire to 使燃烧，点燃 例子:
set off 动身，出发，使爆炸，使爆发，引起 例子:
set out 动身，出发，开始，制定，打算 例子:
set up 建立，设立，树立，资助，使自立，扶持 例子:
settle down 定居，过安定的生活 例子:</description>
    </item>
    
    <item>
      <title>学位英语词组表T</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8t/</link>
      <pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8t/</guid>
      <description>教材来源 成人高等教育本科生学士学位 英语水平考试大纲 非英语专业 第2版
 T   例子:
take a change 冒险一试 例子:
take advantage of 乘...之机，利用 例子:
take after 与...相似 例子:
take care 留心，保重 例子:
take care of 照顾，照料，承当，处理，负责 例子:
take charge 负责，看管 例子:
take delight in 以...为乐 例子:
take down 记下，写下 例子:
take effect 生效，见效 例子:
take ...for granted 想当然，认为.....理所当然 例子:
take in 接受，容纳，领会，理解，欺骗 例子:
take off 拿走，脱下，起飞 例子:
take on 呈现，具有，装出，接纳，接收，承担，从事 例子:
take one`s time 不急不忙的，从容的进行 例子:</description>
    </item>
    
    <item>
      <title>学位英语词组表UM</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8uw/</link>
      <pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E8%AF%8D%E7%BB%84/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84%E8%A1%A8uw/</guid>
      <description>教材来源 成人高等教育本科生学士学位 英语水平考试大纲 非英语专业 第2版
 U  under control 被控制住 例子:
under the circumstances 在这种情况下，情况既然如此 例子:
under way 进行中 例子:
up to date 时兴的 例子:
up to 一直到，等于，从事于，忙于，该由...决定 例子:
use up 用光，花完 例子:
 W  wait on 伺候 例子:
warm up 变热，热身 例子:
watch out (for) 戒备，提防 例子:
wear out （使）磨损，用坏，精疲力尽 例子:
what if 如果...将会怎样 例子:
what about 对于....怎么样 例子:
whether ....or .... 是...还是...,不管...还是.... 例子:
wipe out 消灭，毁灭 例子:</description>
    </item>
    
    <item>
      <title>学位英语常用词缀前缀</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E5%89%8D%E7%BC%80%E5%90%8E%E7%BC%80/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E5%B8%B8%E7%94%A8%E8%AF%8D%E7%BC%80%E5%89%8D%E7%BC%800/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E5%89%8D%E7%BC%80%E5%90%8E%E7%BC%80/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E5%B8%B8%E7%94%A8%E8%AF%8D%E7%BC%80%E5%89%8D%E7%BC%800/</guid>
      <description>前缀 由基础词汇通过增加固定含义的前缀派生出具有前缀含义的单词。这个好像没有限制词性，名词，动词，形容词，等好像都可以。书上没有说，应该是都可以添加。不改变词性。
百度文库 重要前缀 re- 回/向后,再/重新/重复，相反/反对，更加 回/向后 代表词 return(回来，返回)。
recall(回忆，召回)。
retract(缩回，取回)
再 重新 review(复习)
reunion(团圆，重聚)
restart(重新开始)
reconstruction（重建）
相反，反对 rebel(反叛，谋反)
reverse(反转，颠倒)
resist(反抗，抵抗)
更加 recommend(推荐)
de-与dis- 离开/出,去除/取消 以及否定，非，相反 表离开时候常常与from搭配使用 deport(驱逐出境)
derail(出轨)
delete(删除) from
decamp(撤营)
decode(解码)
deforest(砍伐森林)
in-,im-,il-,ir- 都是表示否定的前缀，表示，不，无，非等否定意义。
以b,m,p 开头的形容词 其否定前缀为 im- ,例如;
imbalance(不平衡的)
immoral(不道德的)
impossible(不可能的)
以 L 开头的单词否定用il 以 R 开头的用ir表否定 其他字母开头表否定用in- ex- 出/外/由**中出，前任的/以前的 出/外/由**中出 export(出口，输出)
extract(抽出，拔出,提取，摘自)
前任的/以前的 ex-soldier(退伍军人)
anti- 反对/相反/防止 antiwar(反战)
macro- 宏/大 macro world(宏观世界)
micro- 微 micro world (微观世界)</description>
    </item>
    
    <item>
      <title>学位英语常用词缀前缀网络来源</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E5%89%8D%E7%BC%80%E5%90%8E%E7%BC%80/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E5%B8%B8%E7%94%A8%E8%AF%8D%E7%BC%80%E5%89%8D%E7%BC%80%E7%BD%91%E7%BB%9C%E6%9D%A5%E6%BA%90/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E5%89%8D%E7%BC%80%E5%90%8E%E7%BC%80/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E5%B8%B8%E7%94%A8%E8%AF%8D%E7%BC%80%E5%89%8D%E7%BC%80%E7%BD%91%E7%BB%9C%E6%9D%A5%E6%BA%90/</guid>
      <description>一． 表示否定的前缀 1． dis－加在名词、 形容词， 动词之前。 disadvantage （缺点）
dishonorable（不光彩的）
disagree（不同意）
2．in-加在形容词， 名词之前 incorrect（不正确的）
inability（无能，无力）
inaccurate （不准确的）
3． im-加在字母 m,b,p 之前 impossible （不可能的）
impolite （不礼貌的）
impudence （厚颜无耻）
4． il-加在以l开头的词前 illegal （非法的）
illiterate （文盲的， 无文化的）
illogical （不合逻辑的）
5． ir加在以 r 开头的词前 irregular （不稳定的）
irresistable （不可抵抗的）
irresolvable（不能分解的，不能解决的）
6．un-加在名词，形容词，副词 之前 unfinished（未完成的）
undoubted（无疑的）
unemployment（失 业）
7． non-加在形容词， 名词前 non-existence （不存在）
non-essential ， （不主要的）
non-electrical（非电的）
8．mis－加在动词、名词之前 misunderstand （误解）
misjudge （误判）
misleading （误导）
misfortune （不幸）
9．dis-加地动词之前 disappear（消失）</description>
    </item>
    
    <item>
      <title>学位英语常用词缀后缀</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E5%89%8D%E7%BC%80%E5%90%8E%E7%BC%80/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E5%B8%B8%E7%94%A8%E8%AF%8D%E7%BC%80%E5%90%8E%E7%BC%80/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E5%89%8D%E7%BC%80%E5%90%8E%E7%BC%80/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E5%B8%B8%E7%94%A8%E8%AF%8D%E7%BC%80%E5%90%8E%E7%BC%80/</guid>
      <description>教材来源 成人高等教育本科生学士学位 英语水平考试大纲 非英语专业 第2版
名词后缀 -ability，-ibility 可能性 acceptability 可接受的。accessibility 易接近的
-age 活动，身份 marriage 婚姻，passage 通过，baggage 行李
-al 行动，动作 refusal 拒绝，proposal 建议
-ance,-ence 状态，性质，行为 importance 重要性，confidence 信心，reliance 依耐
-ant,-ent 人，物 assistant 助手，student 学生，lubricant 润滑物
-ary,-ery,-ory 人，地点，学科 secretary 秘书，library 图书馆，refinery 炼油厂，history 历史
-ee 动作承受者 employee 雇员
-eer 从事某种的人 engineer 工程师
-er,-or,人，物。器具 teacher 教师，banker 银行家，actor 演员，merger 合并，boiler 锅炉
-ese 某国的，某地的，某国语言，某地语言，某国人，某地人 Chinese 中国的，中国人，汉语
-ess 女性，雌性 waitress 女服务员
-hood 身份，状态 childhood 儿童时期，likehood 可能，可能性
-ian 人 musician 音乐家</description>
    </item>
    
    <item>
      <title>学位英语词汇表A</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E5%8D%95%E8%AF%8D%E8%A1%A8/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87%E8%A1%A8a/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E5%8D%95%E8%AF%8D%E8%A1%A8/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87%E8%A1%A8a/</guid>
      <description>词性说明   adv(adverb)副词，用来修饰动词和形容词，大多已形容词加LY结尾 art 冠词，分定冠词a、an，和不定冠词the prep介词，用来连接名词与名词或动作与动作，如on in at adj(adjective)形容词，用来修饰名词 n名词 v(verb)动词 vt.表示可及物动词 vi.表示不及物动词 aux.表示情态动词 pron.表示代词   正文 a/an 一（个），每一个，同类事物中的任何一个 词性: art 冠词 例子:
abandon 放弃，抛弃，离弃 词性: vt 可及物动词 例子:
abbreviation 节约，缩写，缩短 词性: n 例子:
ability 能力，才能，才干 词性: n 例子:
able 有能力的，能干的 词性: a 例子:
aboard 在船/车/飞行器上，上船/车/飞行器 词性: ad /prep 例子:
about 关于，在...附近，周围，大约，差不多 词性: prep,ad 例子:
above 在什么上面，超过，上面的，以上 词性: prep,a,ad 例子:
abroad 在国外，在海外，传开 词性: ad 例子:
absence 缺席,缺乏 词性: n 例子:</description>
    </item>
    
    <item>
      <title>学位英语词汇表B</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E5%8D%95%E8%AF%8D%E8%A1%A8/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87%E8%A1%A8b/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E5%8D%95%E8%AF%8D%E8%A1%A8/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87%E8%A1%A8b/</guid>
      <description>前言 结束 </description>
    </item>
    
    <item>
      <title>学位英语词汇表C</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E5%8D%95%E8%AF%8D%E8%A1%A8/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87%E8%A1%A8c/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E5%8D%95%E8%AF%8D%E8%A1%A8/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87%E8%A1%A8c/</guid>
      <description>前言 结束 </description>
    </item>
    
    <item>
      <title>摸鱼Android Fragmentmanger</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/android/android-fragmentmanger/</link>
      <pubDate>Tue, 20 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/android/android-fragmentmanger/</guid>
      <description>前言 话说，搬砖多年，我们的好朋友fragment已经需要适配到AndroidX了，毕竟我之前老是喜欢用V4包下的fragment。但是这个笔记却不是关于更新到Android X的,毕竟如果要整Android X，要改的地方应该有点多，还不知道 Android X和support 包可以共存吗？感觉没法共存，毕竟从activity 到view好像都变了，毕竟第3方包如果没有适配Android X就没法改。自己整是不可能自己整的，毕竟老板没有要求，那我们就永远不适配AndroidX的代码。感觉有点和Android 最新时代已经脱轨了。
好了，回归正文，我们主要是整fragmentmanager。
顺便推一下博客主页
正文 显示fragment吧，这个老朋友了，不需要介绍，app 下的fragment和v4下的fragment调用对应的fragmentmanager就好了。而显示fragment 一般有几种:
 通过ViewPager 加载 通过FrameLayout 通过dialogFragment 显示  这个地方主要整:基于FrameLayout 显示fragment。
显示fragment 代码大概是需要显示成这个样子。
1public Fragment showFragment(String className, FragmentManager fragmentManager, int id) { 2 Fragment fragment = null; 3 try { 4 5 FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction(); 6 //隐藏所有的那个啥。 7 for (Fragment fra : fragmentManager.getFragments()) { 8 fragmentTransaction.hide(fra); 9 } 10 Fragment fragmentByTag = fragmentManager.findFragmentByTag(className); 11 if (fragmentByTag !</description>
    </item>
    
    <item>
      <title>摸鱼DialogFragment</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/android/%E6%91%B8%E9%B1%BCdialogfragment/</link>
      <pubDate>Mon, 19 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/android/%E6%91%B8%E9%B1%BCdialogfragment/</guid>
      <description>前言 话说dialogfragment。这个调调，我用的还是蛮多的。像popwindow,loading，或者一些dialog如果能够用dialogfragment 实现，我一般会选择用这个调调。毕竟有生命周期，感觉和写fragment没有区别。这就导致我基于dialog 实现自定义dialog的能力比较差，主要还是主题设置，设置好了还是感觉差不多的。当然了popwindow的优点还是dialog 或者dialogfragment 无法比拟的。还有一个原因，我比较喜欢将一些值存储到activity的intent中(这么写，还是要提供完整的注释的，要不然不习惯这种写法的会看得很难受)，感觉dialog 中获取activity 没有fragment中那么方便。但是我看好多UI库都是自己写了一个dialog(比如说QMUI) ?搞得我有点懵逼。但是我看别人的代码，很少用dialogfragment 为啥我看到的代码里面，大家都用dialog 而不是dialogfragment ?这个以后探讨吧。
顺便推一下博客主页
正文 话说这个调调DialogFragment和其他控件差不多，也是从28以后移出出去了。看来把代码适配更新到Android X是需要提上日程了。关于基础用法这个网络上很多大佬写过博客的，我觉得没有重复的必要的，和fragment 差不多，还是重要的一点，配置style会影响dialogfragment的显示效果的，状态栏也可以按照需求配置的。
主题 我所使用的主题。通常是全屏的。这个需要通过自己的需求配置
1&amp;lt;style name=&amp;#34;Dialog.FullScreen&amp;#34; parent=&amp;#34;AppTheme&amp;#34;&amp;gt; 2 &amp;lt;item name=&amp;#34;android:windowNoTitle&amp;#34;&amp;gt;true&amp;lt;/item&amp;gt; 3 &amp;lt;item name=&amp;#34;android:windowBackground&amp;#34;&amp;gt;@color/transparent&amp;lt;/item&amp;gt; 4 &amp;lt;item name=&amp;#34;android:windowIsFloating&amp;#34;&amp;gt;false&amp;lt;/item&amp;gt; 5 &amp;lt;item name=&amp;#34;android:textColor&amp;#34;&amp;gt;@color/color_333333&amp;lt;/item&amp;gt; 6 &amp;lt;item name=&amp;#34;android:textSize&amp;#34;&amp;gt;14sp&amp;lt;/item&amp;gt; 7 &amp;lt;item name=&amp;#34;android:backgroundDimEnabled&amp;#34;&amp;gt;true&amp;lt;/item&amp;gt; 8&amp;lt;/style&amp;gt; 9 10&amp;lt;style name=&amp;#34;DialogNoDim&amp;#34; parent=&amp;#34;Dialog.FullScreen&amp;#34;&amp;gt; 11 &amp;lt;item name=&amp;#34;android:backgroundDimEnabled&amp;#34;&amp;gt;false&amp;lt;/item&amp;gt; 12 &amp;lt;/style&amp;gt; 使用:
1@Override 2public void onCreate(@Nullable Bundle savedInstanceState) { 3 super.onCreate(savedInstanceState); 4 setStyle(STYLE_NORMAL, R.style.Dialog_FullScreen); 5} 其他设置：
1@Nullable 2@Override 3public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, Bundle savedInstanceState) { 4 getDialog().</description>
    </item>
    
    <item>
      <title>2020秋冬课程表</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/2020-10-19%E4%B8%93%E5%8D%87%E6%9C%AC%E8%AF%BE%E7%A8%8B%E8%A1%A8/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/2020-10-19%E4%B8%93%E5%8D%87%E6%9C%AC%E8%AF%BE%E7%A8%8B%E8%A1%A8/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Android sqlite前言</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/%E6%97%A5%E5%B8%B8%E6%90%AC%E7%A0%96sqlite%E7%9B%AE%E5%BD%95/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/%E6%97%A5%E5%B8%B8%E6%90%AC%E7%A0%96sqlite%E7%9B%AE%E5%BD%95/</guid>
      <description>前言 话说现在已经2020年了，在Android 应用端上混混沌沌的搬砖已经3年多快4年了。之前也迷迷糊糊的写了些什么，但是却没有一个好一点的系列文章。大多数同行的评论都是&amp;quot;什么都懂一点，但是什么都不精&amp;quot;，还是蛮想改变这个现状的。所以打算认真写一个系列出来，因为最近在复习sqlite,想从各个大佬的项目中找到自己的不足。所以打算写一个sqlite的理解系列吧。
sqlite 通用（Android）   Android 系统内嵌了sqlite，所以使用sqlite的时候并不需要导入jar或者aar 文件或者连接池等。
  Android 中通过 SQLiteDatabase及其子类对表的创建，删除，改名，对内容的增删改查操作。同时可以获取版本号等其他操作。
  Android 上使用sqlite是可以更改 sqlite 存在的位置的，但是默认是/data/data/PACKAGE NAME/DB NAME目录*（就像您在设备的内部存储空间中保存文件一样，Android 会将您的数据库存储在您应用的私有文件夹中。您的数据安全无虞，因为在默认情况下，其他应用或用户无法访问此区域。）*。
  sqlite的更新和创建是在获取SQLiteDatabase的时候执行的（这个可以通过打印log知道）官方文档中提到*（SQLiteOpenHelper 类包含一组用于管理数据库的实用 API。当您使用此类获取对数据库的引用时，系统仅在需要时才执行可能需要长时间运行的数据库创建和更新操作，而不是在应用启动期间执行。您仅需调用 getWritableDatabase() 或 getReadableDatabase() 即可。）*
  sqlite 的表不支持直接重命名表名。如果想要更改表的名字，需要将原表名设置一个临时表名，然后通过新表名创建表，然后删除零时表。
  sqlite 只支持对表增加字段。如果需要删除字段，修改字段名，修改字段对应的类型，都需要通过创建新表，然后复制对应的数据到新表，再删除原表达到效果，这么一想，向表中增加字段也可以通过上面操作进行。
  sqlite 更新是通过检测版本号进行的。
  sqlite有一个sqlite_master 表，通过这个表可以查找所以表的表名，创建sql语句等。
  sqlite 可以查看表的信息和字段 通过 PRAGMA table_info(student) 语句。
  Cursir 使用完之后建议 执行cursor.close(); 关闭游标，但是SQLiteDatabase 不建议在SQLiteOpenHelper 中执行close() 方法，关闭了再同对象中使用可能会抛异常。同时再官方文档中提到（由于在数据库关闭时，调用 getWritableDatabase() 和 getReadableDatabase() 的成本比较高，因此只要您有可能需要访问数据库，就应保持数据库连接处于打开状态。通常情况下，最好在发出调用的 Activity 的 onDestroy() 中关闭数据库）。</description>
    </item>
    
    <item>
      <title>Android sqlite增删改查</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/%E6%97%A5%E5%B8%B8%E6%90%AC%E7%A0%96sqlite%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/%E6%97%A5%E5%B8%B8%E6%90%AC%E7%A0%96sqlite%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/</guid>
      <description>前言 日常搬砖sqlite目录 再目录中提到了一些东西，有兴趣可以点过去看一下，觉得还行麻烦点下赞。
正文 第一步创建数据库 再目录文档中，引用了官方文档的一段话 SQLiteOpenHelper 类包含一组用于管理数据库的实用 API。当您使用此类获取对数据库的引用时，系统仅在需要时才执行可能需要长时间运行的数据库创建和更新操作，而不是在应用启动期间执行。您仅需调用 getWritableDatabase() 或 getReadableDatabase() 即可。
  第一步应该是创建数据库文件。通过上面的引用可以知道 我们创建 数据库文件只需要 继承 SQLiteOpenHelper即可。而SQLiteOpenHelper的构造函数需要传入context，name，factory,version.通常情况下，我们创建数据库的时候只需要context，name，version，name 确定数据库文件的名字，version用于判断创建或更新数据库。
  系统仅在需要时才执行可能需要长时间运行的数据库创建和更新操作，所以我们的创建表的sql语句是可以装到一个list 中的，当然也可以存放到一个map 中，通过表名+创建表的sql。只要我们不获取SQLiteDatabase 数据库就不会创建更新。
  由于在数据库关闭时，调用 getWritableDatabase() 和 getReadableDatabase() 的成本比较高，因此只要您有可能需要访问数据库，就应保持数据库连接处于打开状态 * ，我们决定使用单例。
  在onCreate 中通过execSQL();创建表。
所以整个 SQLiteOpenHelper 可以长这个样子： ​
1public class SqliteDBHelper extends SQLiteOpenHelper { 2 public static final String DATABASE_NAME = &amp;#34;base.db&amp;#34;; 3 public static final int DATABASE_VERSION = 1;//版本号 4 private static volatile SqliteDBHelper helper = null; 5 List&amp;lt;String&amp;gt; allTabs = new ArrayList&amp;lt;&amp;gt;();//这个存放所有的最新的SQL表。不同版本用户创建时候直接创建所以表。 6 7 private SqliteDBHelper(Context context) { 8 super(context, DATABASE_NAME, null, DATABASE_VERSION); 9 initAllSql(); 10 /*UpDateDao dao = new UpDateDao(getReadableDatabase(), allTabs); 11 dao.</description>
    </item>
    
    <item>
      <title>Android sqlite增删改查另类写法</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/%E6%97%A5%E5%B8%B8%E6%90%AC%E7%A0%96sqlite%E5%A2%9E%E6%94%B9%E6%9F%A5%E5%8F%A6%E7%B1%BB%E5%86%99%E6%B3%95/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/%E6%97%A5%E5%B8%B8%E6%90%AC%E7%A0%96sqlite%E5%A2%9E%E6%94%B9%E6%9F%A5%E5%8F%A6%E7%B1%BB%E5%86%99%E6%B3%95/</guid>
      <description>前言 啊哈，今天又更新了。接上一篇日常搬砖sqlite可用类型与存储类型 。
顺便推一下日常搬砖sqlite目录
之前又一篇博客提到了json 对象不仅仅可以通过对象class 解析，也可以解析成map.巧合的是sqlite 添加和更新需要的ContentValues 也是一个类似于map的结构。既然object 与map互转，同理可以解决 object可以和ContentValues 互相转化，是吧。还有一个点 cursor.getType(cursor.getColumnIndex(key)) 可以获取到值的type,所以开整。先总结下可能需要的逻辑。
  ContentValues 也是一个类似于map的结构。 逻辑上object可以和ContentValues 互相转化 cursor.getType(cursor.getColumnIndex(key)) 可以获取到值的type。 通过反射可以获取到对应字段设定的type Cursor 获取到的type 包含 FIELD_TYPE_NULL，FIELD_TYPE_INTEGER，FIELD_TYPE_FLOAT，FIELD_TYPE_STRING，FIELD_TYPE_BLOB（ps:不要问我从哪里看到的，点开对应的class 都有） ContentValues 支持存放主要类型：String，Byte，Short，Integer，Long，Float，Double，Boolean，byte[]等。（ps:不要问我从哪里看到的，点开对应的class 都有）   正文 通过反射拿到所以的Field 1/** 2 * 获取所有的内容，解决父类中参数获取不到的bug 3 * @param object 4 * @return 5 */ 6private static Field[] getAllFieldsByObject(Object object){ 7 Class clazz = object.getClass(); 8 List&amp;lt;Field&amp;gt; fieldList = new ArrayList&amp;lt;&amp;gt;(); 9 while (clazz != null){ 10 fieldList.</description>
    </item>
    
    <item>
      <title>Android sqlite更新</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/%E6%97%A5%E5%B8%B8%E6%90%AC%E7%A0%96sqlite%E6%9B%B4%E6%96%B0/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/%E6%97%A5%E5%B8%B8%E6%90%AC%E7%A0%96sqlite%E6%9B%B4%E6%96%B0/</guid>
      <description>前言 顺便推一下日常搬砖sqlite目录
这个目录里面有sqlite 初始化 增删改查等一些东西，我们就接着这个系列讲数据库更新，之前我们数据库更新判断是通过版本号进行的。而且有一个问题哈，如果我有1，2，3，4，5，共5个版本，通过为了分别应对每个版本，onUpgrade这个方法里面要写很长的东西，简单粗暴的方式当然就是用户强制升级到最新版本，那么我们就只需要处理最新版本的事情了，问题是每一次升级不都是当前最新版本吗？开发阶段中，通过数据库版本号升级要写一大堆逻辑，卸载的化数据又没有了。于是比较懒的我就开始思考一个问题，我每次用之前检测一次是否一致不就好了？那么就需要准备需要的理论知识了、
 系统仅在需要时才执行可能需要长时间运行的数据库创建和更新操作，而不是在应用启动期间执行。您仅需调用 getWritableDatabase() 或 getReadableDatabase() 即可。（这个获取运行时） sqlite 的表不支持直接重命名表名。如果想要更改表的名字，需要将原表名设置一个临时表名，然后通过新表名创建表，然后删除零时表。 sqlite 只支持对表增加字段。如果需要删除字段，修改字段名，修改字段对应的类型，都需要通过创建新表，然后复制对应的数据到新表，再删除原表达到效果，这么一想，向表中增加字段也可以通过上面操作进行。 sqlite有一个sqlite_master 表，通过这个表可以查找所以表的表名，创建sql语句等。 sqlite 可以查看表的信息和字段 通过 PRAGMA table_info(student) 语句。 cursor.getColumnNames()。  正文 通过上面的理论依据，我觉得下面的理论是可行的。
  在获取SQLiteDatabase 之后立即运行一次更新检测逻辑。
  将创建表的sql语句通过list 或者map 存储起来。
  通过sqlite_master获得表名和创建语句
  通过创建sql与sqlite_master获得的创建sql语句对比，同时优先判断是否有创建的表名。
  如果没有则创建表，如果有比对创建sql是否一致。如果创建sql不一致，将原表名重命名为临时表，然后通过创建表，将原表中的数据通过ContentValues取出，赋值到创建表中，然后删除临时表。
  这么写有一个逻辑问题，如果表中的一个字段修改类型之后，可能导致插入失败。建议参考 日常搬砖sqlite可用类型与存储类型，所以不建议对字段修改类型，汉语博大精深换一个名字我觉得是可以的。
  如果忽略6这一点，那么我们的sqlite 启动检查更新的逻辑还是行得通的，毕竟只是对表名和表创建sql进行比对，这个还是很快的。当然性能肯定没有版本号更新好，但是胜在简单粗暴。ps(这只是一种思路，我孤陋寡闻的，反正我的没有见过别人这么写过，毕竟性价比太低了，还是应该老老实实的更新版本号的)那么就可以开整。
通过sqlite_master 获取表名和创建sql 1public Map&amp;lt;String,String&amp;gt; getAllTabs() { 2 Map&amp;lt;String,String&amp;gt; map=new HashMap&amp;lt;&amp;gt;(); 3 String sql = &amp;#34; SELECT * FROM sqlite_master WHERE type = &amp;#39;table&amp;#39;&amp;#34;;//PRAGMA table_info(student) 这个也可以查询表信息。但是只能针对某一个知道表名的表。 4 Cursor cursor = db.</description>
    </item>
    
    <item>
      <title>Android sqlite约束</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/%E6%97%A5%E5%B8%B8%E6%90%AC%E7%A0%96sqlite%E7%BA%A6%E6%9D%9F/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/%E6%97%A5%E5%B8%B8%E6%90%AC%E7%A0%96sqlite%E7%BA%A6%E6%9D%9F/</guid>
      <description>前言 顺便推一下日常搬砖sqlite目录 。
接着上面的写，之前有写到使用sqlite 实现增删改查等简单使用。sqlite是一个关系型数据库，既然是数据库那么它就一定不会这么简单了，是吧，要不然就没有专门做数据库设计的岗位了。当然了在Android上的应用通常可能没有这么复杂。那么简单的约束还是可以了解下的。毕竟我们可能不会做出超出我们逻辑认知的操作。如果想要实现某个功能，那么知道当前工具是否可以是很有必要的吧。
正文 那么我们就直接上菜，Android 上无论是room 还是greendao，都是基于sqlite提供服务的，他们实现的sqlite 就必定有，是吧。我们知道一个表的设计包括 表名，字段名，字段名对应的类型（必须），字段名对应的其他约束。
类型 之前有一篇文章关于sqlite可用类型与存储类型. 在这里就不再次描述了。
约束 runoob sqlite  本文中大多数都是基于该教程，这个还是可以看一下的。SQLite 约束
  primary key: 唯一标识数据库表中的各行/记录
  autoincrement :自增 通常用于 int类型的字段。
  NOT NULL:确保某列不能有 NULL 值
  DEFAULT :当某列没有指定值时，为该列提供默认值
  UNIQUE 约束：确保某列中的所有值是不同的.
  CHECK 约束：CHECK 约束确保某列中的所有值满足一定条件。
算了，感觉自己写的没有别人提供的约束教程好，这个就当做笔记算了，直接查看 上面的教程吧。心态有点难受。
  结束 谢谢光临，若觉得还行麻烦点一下赞，若觉得写得垃圾，欢迎批评指正。笔者知道自己文笔和表达能力很弱，如果您可以提供点宝贵的意见不胜感激。谢谢。
今天也可以是元气满满的一天哦。</description>
    </item>
    
    <item>
      <title>Android基础数据类型与sqlite存储类型</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/%E6%97%A5%E5%B8%B8%E6%90%AC%E7%A0%96sqlite%E5%8F%AF%E7%94%A8%E7%B1%BB%E5%9E%8B%E4%B8%8E%E5%AD%98%E5%82%A8%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/%E6%97%A5%E5%B8%B8%E6%90%AC%E7%A0%96sqlite%E5%8F%AF%E7%94%A8%E7%B1%BB%E5%9E%8B%E4%B8%8E%E5%AD%98%E5%82%A8%E7%B1%BB%E5%9E%8B/</guid>
      <description>前言 之前又一篇文章上讲到 cursor.getType(cursor.getColumnIndex(key)) 可以获取到对应值的类型，通过cursor 类可以知道，cursor 就提供了4种类型。而ContentValues 定义了不止4总类型，sqlite的插入与更新都可以通过ContentValues 对象进行操作的。目录地址
 cursor 定义了4种类型 ContentValues 定义了不止4总类型 sqlite 插入更新都可以通过 ContentValues 对象进行 问题1：sqlite 在创建表的时候是否支持所以的ContentValues 定义类型。 问题2:sqlite 支持的类型 对应了cursor中的哪些类型。 有一个教程博客写的很清晰runoob SQLite 数据类型  安利一个软件sqlitestudio。/data/data/PACKAGE NAME/ 是sqlite 默认存储路径。
正文 创建sqlite表 ContentValues 支持存放主要类型：String，Byte，Short，Integer，Long，Float，Double，Boolean，byte[]等。那么创建sql，我们知道 string 是通过varchar 存储。不知道直接写string 是否可以创建表。
1 create table if not exists all_content_values ( _id Integer primary key autoincrement , string_key String, byte_key Byte,short_key Short ,long_key Long, float_key Float,double_key Double,Boolean_key Boolean,byte_array byte[] ) if not exists 这个是用于防止表重复创建。</description>
    </item>
    
    <item>
      <title>Android开启Debug</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/android/android%E5%BC%80%E5%90%AFdebug%E4%B9%8B%E8%B7%AF/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/android/android%E5%BC%80%E5%90%AFdebug%E4%B9%8B%E8%B7%AF/</guid>
      <description>前言 电脑不是太好。现在用的也仅仅是mac air 1.8 GHz 双核Intel Core i5 8 GB 1600 MHz DDR3。电脑情况不是太好，需要经常清理缓存啊，运行代码量稍微大一点的项目就感觉慢。打算明年换一个好一点的。所以我本人是比较倾向于插件化和aar的使用的，fragment 使用比重也很高，毕竟只要写好了模板，debug功能还是比activity 简单些。
说回正题。Android debug 模式也不多，常用的一般分为：
 打印log 打断点 测试代码 让测试复现bug 等  顺便推一下博客目录
正文 打印log ​	这种情况，一般是检查参数或者接口的时候，如果电脑不怎么行，打log 电脑也不怎么卡，打断点可能就卡了。
但是呢，string 虽说够长，但是log 的打印是有长度限制的。万一log体长度超出了怎么办？只能代码截取分log 打印了。像这种网络上还是蛮多的。
打断点 本篇我们也就主要是介绍下打断点。可能出现的问题。
先介绍下图标1是run（运行，如果手机上没有安装当前app 这个应该是三角形）.2是debug,3是attach debugger to android process。
  debug 版本运行不到手机上。重新编译项目或者删除主项目下 build文件（不要删除错了），还有重新导入编译项目，一般就可以运行到手机上了。
  idea 左边栏有一个 Build variants 工具（可能在其他位置）可以切马甲包配置或者release，debug等。同一个APP 下版本应该是一致的。切成同一个版本就好了。
  release 版本是无法运行debug的。 如果使用release 版本debug 会提示:
 Error running &#39;sqliteroom&#39; Cannot debug application from module sqliteroom on device huawei-lld_al00-MKJDU17C08001071.</description>
    </item>
    
    <item>
      <title>hexo&#43;Gitee pages 搭建个人主页</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/%E5%9F%BA%E4%BA%8Egitee-pages&#43;hexo%E6%8B%A5%E6%9C%89%E4%B8%80%E4%B8%AA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%BB%E9%A1%B5/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/%E5%9F%BA%E4%BA%8Egitee-pages&#43;hexo%E6%8B%A5%E6%9C%89%E4%B8%80%E4%B8%AA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%BB%E9%A1%B5/</guid>
      <description>前言 顺便推一下博客目录
之前整过一个Jekyll和静态网页的主页笔记，最近换季，导致感冒拉肚子，又为国庆生等等耽搁了快一个月了，原本打算这个系列在一周内整出来的，结果到现在还有2个TODO未实现。那么本篇主要级hexo.先上文档官网：
gitee pages 官方文档
Hexo 使用文档：https://hexo.io/docs/
这个是用Node.js .
既然我们用的IDEA,那么node,js也是需要安装的。必须安装。
正文 如果你的Node.js 已经安装成功了。那么按照hexo 提供的教程走就好了。
安装Hexo 先安装hexo：https://hexo.io/zh-cn/docs/
安装2选1就好。
创建执行HEXO 项目 创建 创建代码还是很简单，找一个空目录在终端中执行：
1hexo init myblog Myblog 是自目录名称，根据个人爱好写。然后是:
​	cd myblog//切到myblog 目录：
最后执行：
1npm install 然后通过idea 打开该项目就可以进行编辑了。
配置运行 因为这个项目是基于Node,js 运行的，那么我们直接对整个项目的运行环境进行设置？
对于一个闲鱼而言，从代码中找到运行项是很简单的。比如说**hexo server ** 我觉得这个就是运行Demo 的关键。
如果idea 打开这个文件没有运行按钮，就需要对整个项目目录配置为node 的项目比如：
![image-20201009112924696](/Users/yangfan/Library/Application Support/typora-user-images/image-20201009112924696.png)
但是通常还是有运行按钮的。运行成功后打开：http://localhost:4000/ 就可以看到初始创建的博客样子了。如果404 明显就是 hexo server 没有运行成功嘛。
添加一篇文章 我们在运行成功后，发现里面有一篇默认文章。修改网页的一些默认值 https://hexo.io/zh-cn/docs/configuration。这里就不重复了。我们可以在项目的目录下找到：
这个和运行出来的hello world 内容是差不多的。里面除了正文 还有：
1--- 2title: 测试Demo1 3--- 这个怎么和Jekyll 的文章配置这么像啊，兄弟。而且没有要求用时间+名字，很舒服。那么我不写这个配置会出现什么情况？
和Jekyll 一样的嘛，标题都是抓的title。但是时间是抓的生成时间。而且Jekyll标题没有按照格式来的话，是不会显示到目录中的，这个好像可以设置。</description>
    </item>
    
    <item>
      <title>Hexo&#43;Gitee pages 搭建个人主页进阶</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/hexo&#43;gitee-pages%E8%BF%9B%E9%98%B6/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/hexo&#43;gitee-pages%E8%BF%9B%E9%98%B6/</guid>
      <description>前言 之前整了一些笔记。
[gitee+picgo 图床上传图片404](https://gitee.com/lalalaxiaowifi/pictures/blob/master/博客/其他/gitee 图床上传图片404.md)
[基于html拥有自己的主页](https://gitee.com/lalalaxiaowifi/pictures/blob/master/博客/其他/如何基于gitee pages 搭建一个属于自己的主页.md)
[基于Jekyll拥有自己的主页](https://gitee.com/lalalaxiaowifi/pictures/blob/master/博客/其他/2020-09-29-基于Gitee pages+Jekyll拥有一个属于自己的主页.md)
[Gitee Pages Jekyll如何才能放到子目录和非同名项目中](https://gitee.com/lalalaxiaowifi/pictures/blob/master/博客/其他/Gitee Pages Jekyll如何才能放到子目录和非同名项目中.md)
[基于Hexo拥有自己的主页](https://gitee.com/lalalaxiaowifi/pictures/blob/master/博客/其他/基于Gitee pages+Hexo拥有一个属于自己的主页.md)
[基于Hugo拥有自己的主页](https://gitee.com/lalalaxiaowifi/pictures/blob/master/博客/其他/基于Gitee pages+Hugo拥有一个属于自己的主页.md)
都是基于Gitee 的。反正最近很闲，没有多少动力学习Android，其实没有完成的todo 还是蛮多的。但是就想摸鱼。毕竟越是难的东西，花费的精力就越多，像网上哪些多少天就学会什么成为高阶开发什么的，对我完全不适用，除非就真的很简单，但是会简单的也成不了高阶吧。话说回来，Gitee pages 主页就比较简单了，至于为啥药写这么多简单的笔记，主要锻炼自己总结能力和逻辑能力吧。
顺便推一下博客目录
正文 话说，之前有一个[基于Hexo拥有自己的主页](https://gitee.com/lalalaxiaowifi/pictures/blob/master/博客/其他/基于Gitee pages+Hexo拥有一个属于自己的主页.md) 。这个是推的编译后的文件到同名项目的根目录。而一个人只有一个同名项目，同时在gitee pages上只能开启一个主页。对于我这种脑洞满天飞，且不断作死的baby.我觉得，既然人家文档都提供了，不利用起来那就开整，还是先贴文档。https://gitee.com/help/articles/4136#article-header0
  编译 Hexo 依据：仓库编译目录下存在package.json，_config.yml文件和scaffolds目录的，会使用hexo generate生成静态文件，由于每次部署编译需要重新克隆编译并进行npm install，所以使用 Hexo 的时间相对 Hugo 和 Jekyll 会长一些。   哦哦，理解一波，这个可以直接提交项目源代码。
 Hexo 配置文件_config.yml的url和root修改如下：
1url: https://ipvb.gitee.io/blog 2root: /blog  这个理解一波，就是可以提交到非同名项目下。基于之前Jekyll 使用github 主题导致问题。那么，我们这个hexo就不用别人的主题，直接使用系统提供的。这里解释下，Github 对Github pages 对应的项目名有明确的要求，不像Gitee pages 玩的这么花，如果是放在同名根目录下是没有问题的，如果是放到非同名项目中。那么可能因为主题作者没有适配一些东西，导致资源文件找不到，还是建议放到同名根目录，毕竟个人主页嘛，一个就好。也没有一些莫名其妙的问题。
源码提交 之前那篇笔记是通过一键部署到同名项目的根目录下的。既然是提交项目源代码，那么就不能用一键部署了咯。那就开整。之前本地安装过环境。就直接创建项目了。
1hexo init myblog 2npm install 稍微修改写congfig 中的内容。</description>
    </item>
    
    <item>
      <title>Hugo&#43;Gitee pages 搭建个人主页</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/%E5%9F%BA%E4%BA%8Egitee-pages&#43;hugo%E6%8B%A5%E6%9C%89%E4%B8%80%E4%B8%AA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%BB%E9%A1%B5/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/%E5%9F%BA%E4%BA%8Egitee-pages&#43;hugo%E6%8B%A5%E6%9C%89%E4%B8%80%E4%B8%AA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%BB%E9%A1%B5/</guid>
      <description>前言 之前整过一个静态网页，一个Jekyll，一个hexo.话说，如果我知道的不完整，我怎么才能知道什么才是适合自己的呢？那么，就开整。
顺便推一下博客目录
正文 老规矩，还是先贴官方教程:
Gitee pages 适用文档: https://gitee.com/help/articles/4136#article-header0
Hugo 使用文档：https://gohugo.io/documentation/
 Hugo is the world’s fastest static website engine. It’s written in Go (aka Golang) and developed by bep, spf13 and friends.
 不说别的，光说上面的这一句话包含的意思，一个Go，一个最快。我就应该先了解这个，了解这个之后，前面几个笔记也不会这么苦逼的写了，直接放弃就好。
环境 既然是基于Go,那么IDEA 开发环境还是需要的。老规矩，还是先整插件:https://plugins.jetbrains.com/
https://plugins.jetbrains.com/plugin/9568-go 下载和IDEA版本号相同的插件。
因为网络问题，GO SDK 在IDEA 中下载缓慢，甚至版本号都拉不到，所以需要自己手动下载安装。
https://golang.google.cn/dl/
安装运行 不同的系统环境，安装的方式不同。详情看教程：https://gohugo.io/getting-started/installing 。就因为我没有看这个教程，我的电脑更新Homebrew 已经更新10分钟了。因为安装的方式太多了，所以就不截图介绍了。
 hugo version 通过这个验证版本号，同时验证安装是否成功。有版本号就成功了，没有应该就是没有成功。
 但是一项脑洞到处跑的我，突然想到了 hugo 可能出现在IDEA的插件中我果然在IDEA 插件库中找到了一个。但是本地还是需要一个安装Hugo.但是也不是没有用，起码可以直接运行项目。
通过Homebrew安装过程中或许会出现:
 The following directories are not writable by your user:
/usr/local/sbin</description>
    </item>
    
    <item>
      <title>Hugo&#43;Gitee pages 搭建个人主页</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/%E5%9F%BA%E4%BA%8Ehogo%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%BB%E9%A1%B5/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/%E5%9F%BA%E4%BA%8Ehogo%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%BB%E9%A1%B5/</guid>
      <description>前言 在对比了Jekyll，hexo和hugo 之后，我决定使用Hugo搭建属于自己的主页。自己写静态网页这个调调就基本上放弃了。因为打算认真的写笔记什么的了。 选择hogo 原因还是蛮简单的，主要是他主题提供了Demo。虽然Jekyll主题可以下载别人项目的源码，但是还是需要去读和修改的。 顺便推一下博客目录
结束 http://localhost:1313/images/avatar.jpg 谢谢光临，若觉得还行麻烦点一下赞，若觉得写得垃圾，欢迎批评指正。笔者知道自己文笔和表达能力很弱，如果您可以提供点宝贵的意见不胜感激。谢谢。
今天也可以是元气满满的一天哦。 更新需要审核。更新通常优先更新到gitee上面。
博客目录</description>
    </item>
    
    <item>
      <title>Hugo&#43;Gitee pages 搭建个人主页进阶</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/hogo&#43;gitee-pages%E8%BF%9B%E9%98%B6/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/hogo&#43;gitee-pages%E8%BF%9B%E9%98%B6/</guid>
      <description>前言 之前整了一个Gitee page 的笔记。
[gitee+picgo 图床上传图片404](https://gitee.com/lalalaxiaowifi/pictures/blob/master/博客/其他/gitee 图床上传图片404.md)
[基于html拥有自己的主页](https://gitee.com/lalalaxiaowifi/pictures/blob/master/博客/其他/如何基于gitee pages 搭建一个属于自己的主页.md)
[基于Jekyll拥有自己的主页](https://gitee.com/lalalaxiaowifi/pictures/blob/master/博客/其他/2020-09-29-基于Gitee pages+Jekyll拥有一个属于自己的主页.md)
[Gitee Pages Jekyll如何才能放到子目录和非同名项目中](https://gitee.com/lalalaxiaowifi/pictures/blob/master/博客/其他/Gitee Pages Jekyll如何才能放到子目录和非同名项目中.md)
[基于Hexo拥有自己的主页](https://gitee.com/lalalaxiaowifi/pictures/blob/master/博客/其他/基于Gitee pages+Hexo拥有一个属于自己的主页.md)
[Hexo+Gitee pages进阶](https://gitee.com/lalalaxiaowifi/pictures/blob/master/博客/其他/Hexo+Gitee pages进阶.md)
[基于Hugo拥有自己的主页](https://gitee.com/lalalaxiaowifi/pictures/blob/master/博客/其他/基于Gitee pages+Hugo拥有一个属于自己的主页.md)
因为Jekyll 和Hexo的经验让我写这个笔记的时候索然无味。话说hugo 也是提交的静态网页到同名项目到根目录，然后还配置了baseurl才可以的。
顺便推一下博客目录
正文 作为一个杠精，我觉得，既然Jekyll，hexo 都可以上传源码和静态网页到同名项目和非同名项目。那么我Hugo必定可行，只是我没有找到解决方式罢了。通过Jekyll和Hexo的经验，都是编译后提交才显示成功的，而且根目录可以子目录就一定可以，子目录可以根目录也可以。同名项目和非同名项目在Gitee page 上的部署的区别主要在于设置。主题可能影响部署中资源文件使用情况。那么就开整。
还是直接上教程：https://gitee.com/help/articles/4136#article-header0
  编译 Hugo 依据：仓库编译目录下存在config.toml|json|yaml文件和content目录的时候，会使用hugo生成静态文件。   这个说明可以部署源码。
 Hugo 配置文件config.toml的baseURL修改如下
1baseURL = &amp;#34;https://ipvb.gitee.io/blog&amp;#34;   hugo new site quickstart
切到项目目录下主题。
1git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke   修改config 中的theme = &amp;quot;ananke&amp;quot;
 本地开启server
 hugo server -D</description>
    </item>
    
    <item>
      <title>java EE</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/javaee/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%860/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/javaee/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%860/</guid>
      <description>前言 结束 </description>
    </item>
    
    <item>
      <title>java部分修饰符</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/android/java-%E4%BF%AE%E9%A5%B0/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/android/java-%E4%BF%AE%E9%A5%B0/</guid>
      <description>前言 明明刚刚在写另外一篇博客的，然后准备资料的时候发现了一些懵逼的东西。这个明显触及到了我的知识点盲区。主要是有一种很乱的感觉，没错是我菜，见识短浅啊。
直接上教程runoob Java 教程。本篇主要介绍两个修饰符 final，volatile。当然了runoob java 修饰符 这个教程把修饰符都讲完了。为啥写，主要是缺点笔记。
还有是为了认真工作嘛。
如果领导路过不打招呼又在摸鱼影响不好，反正都是在认真工作的样子。。
那么我们就开始罗列知识点:（具体使用请参考 上面教程）   final 变量：
final 表示&amp;quot;最后的、最终的&amp;quot;含义，变量一旦赋值后，不能被重新赋值。被 final 修饰的实例变量必须显式指定初始值。
final 修饰符通常和 static 修饰符一起使用来创建类常量。
  final 方法
父类中的 final 方法可以被子类继承，但是不能被子类重写。
声明 final 方法的主要目的是防止该方法的内容被修改。
  final 类
final 类不能被继承，没有类能够继承 final 类的任何特性。
  volatile 修饰符
volatile 修饰的成员变量在每次被线程访问时，都强制从共享内存中重新读取该成员变量的值。而且，当成员变量发生变化时，会强制线程将变化值回写到共享内存。这样在任何时刻，两个不同的线程总是看到某个成员变量的同一个值。
  顺便推一下博客目录 。
正文 我去，上面总结完了，现在正文写啥？
先说final 吧，修饰常量，Android 可以定义在xml 中 通过Context的getResources() 获取string或者int 值。常量是存储在内存中的，那么和Android 从xml 中获取到底谁的性能更加优秀？
然后是在单例中使用，Android 中使用单例的机会也不是太多，大多数和生命周期绑定使用，只有哪些初始化成本比较高，使用较为频繁的功能才可能考虑单例。比如数据库的db对象和SharedPreferences.都是创建成本高，而且对象方法加锁执行，可能导致线程阻塞，如果是异步处理volatile 从逻辑上讲更好啊，
final 修饰方法，这个主要是用于功能设计的底层逻辑编写。
final 修饰类，类不能被继承，核心功能类设计吧，通常和包限制共同使用。</description>
    </item>
    
    <item>
      <title>Jekyll&#43;Gitee pages 搭建个人主页</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/2020-09-29-%E5%9F%BA%E4%BA%8Egitee-pages&#43;jekyll%E6%8B%A5%E6%9C%89%E4%B8%80%E4%B8%AA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%BB%E9%A1%B5/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/2020-09-29-%E5%9F%BA%E4%BA%8Egitee-pages&#43;jekyll%E6%8B%A5%E6%9C%89%E4%B8%80%E4%B8%AA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%BB%E9%A1%B5/</guid>
      <description>前言 顺便推一下博客目录 。之前写过一个基于静态html的笔记。
正文 Jekyll 既然自己写静态网页对于我这种小白而言太复杂了，那么用博客主页生成工具就可以了，毕竟鲁迅曾经说过&amp;quot;成年人最大的优点就是及时止损&amp;quot;。
Jekyll 使用文档：https://www.jekyll.com.cn/docs/home/。
这个要安装Ruby 环境？ 这丫的感觉一个脚本语言，我觉得我还是用html 比较好，毕竟我这个是会的。
基于IDEA 安装环境 先整一个ruby教程runoob Ruby 教程 。这个感觉和Python很像嘛。那就开整。这个调调的使用感觉和Node.js 很像啊，不会要Node.js 环境吧。怕是需要看一下Ruby 使用安装环境 。
我的是mac 环境。
这个是要Xcode ? 我一个Android 搬砖工，也没有安装这个调调啊，我觉得我的IDEA可以完成这个调调。那么直接IDEA 插件官网。IDEA Ruby 插件  根据自己的IDEA 版本号下载对应的版本就好，版本对不上就安装不了。然后自己将下载下来的插件安装到自己的idea 里面就好。然后就是用IDEA自身功能下载sdk就好。然后创建一个Ruby的空项目，创建一个Ruby文件。配置ruby的运行项中的sdk ：
如果可以正常运行，那么环境就配置好了。当然也可能是运行项没有配置好，主要是配置sdk.这个必须要配置。
下载运行Jekyll Demo 现在就是按照官网jekyll 操作指南 下载 Jekyll 和创建环境就好。
下面来说说遇到的问题，
 1和2 需要 在前面加sudo 要不然可能没有目录权限，需要输入密码。 2 是在当前目录下创建一个myblog 目录用于生成文件。 3是进入目录，这个很重要，目录错了会导致运行不了。 jekyll --version 可以查看版本号。如果有说明这个安装成功了的。 bundler: failed to load command: jekyll (/usr/local/bin/jekyll) 这个问题，我从网络上找到的说需要 执行bundle install。 上面的问题是运行bundle exec jekyll serve 导致的，如果没有这个问题，直接打开 http://localhost:4000 会出现这个界面：  通过目录结构:</description>
    </item>
    
    <item>
      <title>Jekyll&#43;Gitee pages 搭建个人主页进阶</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/gitee-pages-jekyll%E5%A6%82%E4%BD%95%E6%89%8D%E8%83%BD%E6%94%BE%E5%88%B0%E5%AD%90%E7%9B%AE%E5%BD%95%E5%92%8C%E9%9D%9E%E5%90%8C%E5%90%8D%E9%A1%B9%E7%9B%AE%E4%B8%AD/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/gitee-pages-jekyll%E5%A6%82%E4%BD%95%E6%89%8D%E8%83%BD%E6%94%BE%E5%88%B0%E5%AD%90%E7%9B%AE%E5%BD%95%E5%92%8C%E9%9D%9E%E5%90%8C%E5%90%8D%E9%A1%B9%E7%9B%AE%E4%B8%AD/</guid>
      <description>前言 之前写了点gitee pages 相关的笔记。
[基于html拥有自己的主页](https://gitee.com/lalalaxiaowifi/pictures/blob/master/博客/其他/如何基于gitee pages 搭建一个属于自己的主页.md)
[基于Jekyll拥有自己的主页](https://gitee.com/lalalaxiaowifi/pictures/blob/master/博客/其他/2020-09-29-基于Gitee pages+Jekyll拥有一个属于自己的主页.md)
[基于Hexo拥有自己的主页](https://gitee.com/lalalaxiaowifi/pictures/blob/master/博客/其他/基于Gitee pages+Hexo拥有一个属于自己的主页.md)
[基于Hugo拥有自己的主页](https://gitee.com/lalalaxiaowifi/pictures/blob/master/博客/其他/基于Gitee pages+Hugo拥有一个属于自己的主页.md)
但是都是基于同名的项目实现的，而且都是推到根目录下的。Jekyll 还是推的源码上去，hexo和Hugo都是推的编译后的文件。因为Jekyll，Hexo，Hugo都是用的静态网页，所以静态网页也是可以直接用的。顺便推一下博客目录
正文 但是，我昨天认真工作(摸鱼的时候)突然想到了一个问题，既然都是生成的静态网页，为啥我直接写的静态网页可以放到非同名项目的子目录下运行，为啥Jekyll，hexo ,hugo 等就不行呢，按道理讲，都是编译生成静态网页啊。先放一个静态网页成功的例子：
运行效果就先不贴了。那么问题来了，是什么导致gitee pages 上面Jekyll，Hexo，Hugo 生成的静态网页用不起的呢？为啥一定要推到根目录，且一定要同名项目呢？还是关于这个配置，我的理解有问题。先贴一个gitee pages 提供的教程：https://gitee.com/help/articles/4136#article-header0
 Jekyll、Hugo、Hexo 编译判断依据  编译 Hugo 依据：仓库编译目录下存在config.toml|json|yaml文件和content目录的时候，会使用hugo生成静态文件。 编译 Hexo 依据：仓库编译目录下存在package.json，_config.yml文件和scaffolds目录的，会使用hexo generate生成静态文件，由于每次部署编译需要重新克隆编译并进行npm install，所以使用 Hexo 的时间相对 Hugo 和 Jekyll 会长一些。 当不符合上述1和2条件的时候，就默认使用Jekyll编译。   通过教程上面的这个内容，个人理解，Jekyll ，hugo，hexo 按道理讲都应该支持上传项目源码的啊。为啥我的只有jekyll 上传源码到同名根目录才可以有效果？其他的都不行呢？这个坑留着，后面慢慢解。另外还有一个问题。
第2点中的:生成的资源 url 应该为 https://ipvb.gitee.io/blog/style.css 才对 ,我觉得他证明了非同名项目，且在字目录中是可以实现个人主页的。上传上去的效果不正确，那就是资源文件的url 不正确。于是我采集了静态网页显示正常的图片的url和jekyll 显示不正常的url.
静态网页显示正常的url:http://lalalaxiaowifi.gitee.io/pictures/images/g2.jpg
jekyll 配置不正常显示的url:http://lalalaxiaowifi.gitee.io/images/avatar.jpg 这个不正常的url 在同名项目的根目录下是运行正常的，我把整个Jekyll项目放到了pictures/tree/master/Blog/jekyllBlog 下面，等于说我的项目名叫pictures，使用分支是master，根目录下的Blog/jekyllBlog，他就显示不正常了，但是通过对比两个url，发现放到其他目录下，生成的链接地址都是错误的(原因参考 上面图片的第2点)。因为这个也证明了我之前的一个猜测，个人用户应该只有一个主页。开启一个后，其他的必定会被关闭，个人理解Gitee pages 对应的localhost 就是个人根目录，比如说我的根目录应该就是：http://lalalaxiaowifi.gitee.io，再比如说我的pictures地址就应该http://lalalaxiaowifi.gitee.io/pictures。也确实如此。那么既然如此，那就按照Gitee Pages 提供的再配置一次。</description>
    </item>
    
    <item>
      <title>MFC 01</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/mfc3%E7%BB%B4%E5%9B%BE%E5%BD%A2%E5%BC%80%E5%8F%91/mfc-01/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/mfc3%E7%BB%B4%E5%9B%BE%E5%BD%A2%E5%BC%80%E5%8F%91/mfc-01/</guid>
      <description></description>
    </item>
    
    <item>
      <title>object与map项目转换</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/%E6%97%A5%E5%B8%B8%E6%90%AC%E7%A0%96objec%E5%92%8Cmap%E4%BA%92%E7%9B%B8%E8%BD%AC%E6%8D%A2/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/%E6%97%A5%E5%B8%B8%E6%90%AC%E7%A0%96objec%E5%92%8Cmap%E4%BA%92%E7%9B%B8%E8%BD%AC%E6%8D%A2/</guid>
      <description>前言 搬砖生活中，有一种转换叫做序列化和反序列化。但是本文和这个没有多少关系，我们知道JAVA 的对象的存储是分键和值的，emmmm？map 好像也是哦，我们可能会遇到一个判断一个对象中是否包含多个值或者一个json 中只需要某个值的情况，那么是否可以针对简单对象提供一个json 转map的能力呢？emmmm？gson 实现了，比如这个样子：
1new Gson().fromJson(&amp;#34;&amp;#34;,new TypeToken&amp;lt;Map&amp;lt;String,Object&amp;gt;&amp;gt;(){}.getType()) 但是，这个和本文还是没有关系。我只是顺便引导一下。需要对象转map 的情况通常在与服务器互动过程中。我们定义了一个专门用于传递参数的对象，如果服务器不要求传递json,那么就需要转map了，或者手动赋值。手动？那是不可能的。JAVA 中一个骚操作，叫反射，但是它有一个问题，那就是无法反射到父类的参数。比如有一个每个接口都需要传递的参数，要么每次添加，要么创建对象时候生成。但是这都不是问题。
获取所以内容 1//这个方法可以解决获取不到父类的情况 2private static Field[] getAllFieldsByObject(Object object){ 3 Class clazz = object.getClass(); 4 List&amp;lt;Field&amp;gt; fieldList = new ArrayList&amp;lt;&amp;gt;(); 5 while (clazz != null){ 6 fieldList.addAll(new ArrayList&amp;lt;&amp;gt;(Arrays.asList(clazz.getDeclaredFields()))); 7 clazz = clazz.getSuperclass(); 8 } 9 Field[] fields = new Field[fieldList.size()]; 10 fieldList.toArray(fields); 11 return fields; 12} 13 14	/** 15 * 获取对象中所有可用字段。 16 * @param clazz 17 * @return 18 */ 19 private static Field[] getAllFieldsByClass(Class clazz){ 20 List&amp;lt;Field&amp;gt; fieldList = new ArrayList&amp;lt;&amp;gt;(); 21 while (clazz !</description>
    </item>
    
    <item>
      <title>picgo&#43;gitee配置图床404</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/gitee-%E5%9B%BE%E5%BA%8A%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87404/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/gitee-%E5%9B%BE%E5%BA%8A%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87404/</guid>
      <description>前言 之前逛掘金沸点的时候。得到了某些大佬的指点，然后知道了一个叫图床的神器，反正都是写笔记，搞一个图床也没有啥问题，表示非常喜欢md 的笔记风格。
顺便推一下博客目录
正文 我是通过 picgo+ gitee 图床的。这个教程很多，都写的蛮好的，就不贴了。今天准备认真工作的时候，发现图床上传不了图片，抛了一个404。具体log 稍后再贴。原因也很简单。gitee 的图床插件有两个。我最开始用的是第一个，也就是第一天使用的时候是没有问题的。
但是昨天404，我换成了另外一个就好了，今天又变成了第一个了？于是我把第一个禁用了，换成了第2个。
图片上传404 解决方案 如果安装的插件是第一个出现上传图片404，我遇到的解决方式就是先把第一个禁用了，然后安装第2个。
我也搜索了不少博客，404 通常是配置的时候没有配置对，像这种插件导致的懵逼问题好像没有，但愿你也没有遇到。拿我的图床举例。我的名字和链接地址上是不一样的，我项目的名字是luoye.yangfan/日常搬砖文档，而链接地址是/lalalaxiaowifi/pictures。在picgo的图床配置中 需要使用的是链接地址中的值。还有token 一定要填正确，一定要有master 分支等等。我还是建议用这个插件。如果还是404那就换一个或者配置有问题。图床项目好像是要求公开的（我没有试私有）。
404 log  {&amp;quot;name&amp;quot;:&amp;quot;StatusCodeError&amp;quot;,&amp;quot;statusCode&amp;quot;:404,&amp;quot;message&amp;quot;:&amp;quot;404 - &amp;quot;\n\n\n\n &amp;lt;meta http-equiv=\&amp;quot;Content-Type\&amp;quot; content=\&amp;quot;text/html; charset=UTF-8\&amp;quot; /&amp;gt;\n 你所访问的页面不存在 (404)}
 因为那个404 有点长就不贴完了。这就是页面没有找到，如果配置没有问题，那就是插件的问题了。
picgo 如何查看log 查看log 就很简单了，因为mac 通知无法复制，所以我找404log 都找了一会，终于在打开就好了。不知道Windows 版本是长什么样，应该也差不多吧。
重点 如果不设置为默认图床，那么会上传到一个其他图床https://i.loli.net上面去，我的就上传到这个上面去了，设置为默认的就会直接上传到自己的图床(如果配置没有问题的话);
结束 谢谢光临，若觉得还行麻烦点一下赞，若觉得写得垃圾，欢迎批评指正。笔者知道自己文笔和表达能力很弱，如果您可以提供点宝贵的意见不胜感激。谢谢。
今天也可以是元气满满的一天哦。</description>
    </item>
    
    <item>
      <title>Python入门搞事</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/python/python%E5%85%A5%E9%97%A8%E6%90%9E%E4%BA%8B/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/python/python%E5%85%A5%E9%97%A8%E6%90%9E%E4%BA%8B/</guid>
      <description>前言 之前无聊逛github的时候，发现了一个Python爬虫的教程库，于是顺手点了一个赞。这里贴一下:https://github.com/wistbean/learn_python3_spider 。今年打算努力下，所以TODO 写了一大堆，然后专升本也要在线学习，晚上去学校上课，还要备考英语，Android 技术方向上又整了一个在线课程，虽然最近没有啥事情，但是总感觉事情整不完，特别是在线学习的这个调调，认真听吧，不好说，挂课吧，不会js,然后之前的也用不起了，手动点吧，一分钟一点，这一天天的就啥事情不用干了。本着能多学一点是一点的态度，我决定通过selenium，看看自己能不能整一个挂课脚本出来。
话说这个调调 selenium 是web的自动化测试工具。emmm ?好像支持JAVA，ok python 先放下了，我大JAVA 要起来了。
顺便推一下博客主页
结束 谢谢光临，若觉得还行麻烦点一下赞，若觉得写得垃圾，欢迎批评指正。笔者知道自己文笔和表达能力很弱，如果您可以提供点宝贵的意见不胜感激。谢谢。
今天也可以是元气满满的一天哦。 更新需要审核。更新通常优先更新到gitee上面。
博客主页</description>
    </item>
    
    <item>
      <title>selenium</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/selenium/selenium%E6%A8%A1%E6%9D%BF/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/selenium/selenium%E6%A8%A1%E6%9D%BF/</guid>
      <description>前言 顺便推一下博客主页
结束 谢谢光临，若觉得还行麻烦点一下赞，若觉得写得垃圾，欢迎批评指正。笔者知道自己文笔和表达能力很弱，如果您可以提供点宝贵的意见不胜感激。谢谢。
今天也可以是元气满满的一天哦。 更新需要审核。更新通常优先更新到gitee上面。
博客主页</description>
    </item>
    
    <item>
      <title>selenium入门1</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/selenium/selenium%E5%85%A5%E9%97%A81/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/selenium/selenium%E5%85%A5%E9%97%A81/</guid>
      <description>前言 之前逛github的时候，发现了一个Python调用自动化测试工具的教程。然后发现了一个selenium的宝贝，在这位大佬的Demo中，我发现他可以直接操作浏览器。
话说 我一个Android 搬砖工，好像也没有必要整这个自动化web。
顺便推一下博客主页
正文 先整需求:
  基本需求，在线学习中，可以自己隔一段时候点一下下一页。
  进阶一点的是，可以不吃焦点的点下一页。
  再进阶一点的，可以最小化浏览器，然后还可以点下一页。
  基于基本需求可以判断界面是否学习完毕，完毕后才点下一页，或者等待了3分钟没有完成直接点下一页。
  基于上一条补充，先判断当前页有多少个课，如果有多个，先每一个跳转一下到最后一个，等完毕后再下一页。
主要还是要用到他这个直接操作界面，我也不爬数据，只是监听获取控件。
  介绍 先整一个官网的教程：https://www.selenium.dev/documentation/zh-cn/
这个调调可能需要科学上网。上面有一个中文的，主要是我应该用的是JAVA，所以中文的里面没有，但是对应的教程还是有很多博客的，知识这种东西，还是看原滋原味的，然后结合别人的理解，就可以找到自己的理解，这么快一点，如果直接是别人的理解，就不容易生成自己的理解了，扩展会相对差一点，也不是不能扩展。
这个地方可以切换文档语言。
这个调调支持的语言还是蛮多的。这就导致了不同的语言，接入方式不一样。那么就直接看这个调调支持些什么:从文档上可以看到，支持很多浏览的自动化操作。包括：
 自动打开浏览器，并且打开一个网页。https://www.selenium.dev/documentation/zh-cn/webdriver/browser_manipulation/ 通过id ,class,标签等操作获取到控件。https://www.selenium.dev/documentation/zh-cn/webdriver/web_element/ 支持控件点击等相关事件操作。 可以获取到浏览器的各种信息，长宽高。https://www.selenium.dev/documentation/zh-cn/webdriver/browser_manipulation/ 可以模拟鼠标操作。 可以模拟键盘操作。https://www.selenium.dev/documentation/zh-cn/webdriver/keyboard/ 可以设置等待，https://www.selenium.dev/documentation/zh-cn/webdriver/waits/ 可以设置加载策略。  反正提供的还是蛮多的，更多的看文档就好。文档也不多，浏览式的看完也要不到20分钟。
既然我应该会JAVA ，那么就直接整JAVA 的调用方式。浏览器也是谷歌浏览器，那么驱动也下载这个调调。
Java环境 因为我这把JAVA 环境比较好一点，selenium提供 jar和Maven,国内Maven经常下载不了。所以我还是选择jar比较好。
  org.seleniumhq.selenium
selenium-java
3.X
  通过 https://www.selenium.dev/downloads/ 这个网站可以知道当前最稳定的是：3.141.59 点这个版本号就可以直接下载了。
然后是浏览器驱动。
需要使用什么浏览器就下载配置什么浏览器驱动就好了。https://www.selenium.dev/documentation/zh-cn/webdriver/driver_requirements/ ，这个区分浏览器和系统了的。需要配置path.由于官网提供的Demo是谷歌浏览器的，所以还是安装谷歌浏览器的驱动吧，主要是他好像没法自动导包。
Java项目 我就直接基于idea新建一个JAVA 项目了。主要是考虑到Maven 可能下载不了，所以直接是JAVA 项目，而不是Maven 项目。然后将刚刚下载的jar 整到项目里面去。</description>
    </item>
    
    <item>
      <title>SQL server 创建和修改数据库</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E6%95%B0%E6%8D%AE%E5%BA%93/sql-server-%E5%88%9B%E5%BB%BA%E5%92%8C%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E6%95%B0%E6%8D%AE%E5%BA%93/sql-server-%E5%88%9B%E5%BB%BA%E5%92%8C%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <description>数据库定义 数据库是按照一定的数据模型组织起来并存放在存储介质中的数据集合。他是用来组织和存取大量数据大管理系统。
正文 数据库对象  表 table 是包含数据库中所有数据的数据库对象，由行和列构成。 视图 view 是由一个表或者多个表导出的表，又称为虚拟表。 索引 index 为了加快数据检索速度并可以保证数据唯一性的数据结构。 存储过程 stored procedure 为了完成特定功能的T SQL 语句集合，编译后存放于服务器端的数据库中 触发器 trigger 他是一种特定的存储过程，当某个规定的事件发生时该存储过程自动执行。  系统数据库 sql Server 在安装时创建了4个系统数据库，master，model，msdb,tempdb.当系统数据库被破坏时sql Server 将不能正常启动工作。
 master 数据库：记录sqlServer系统信息，如登录账号，系统配置，数据库位置，数据库错误信息。用于控制用户数据库和sqlServer 的运行。 model 数据库为创建数据库提供模板。 msdb 代理服务数据库，为调度信息，作业记录等提供存储空间。 tempdb 临时数据库，为临时表和临时存储过程提供存储空间。  物理数据库 页和区是sql Server 的两个主要的数据存储单位。
 页 每个页是 8KB,每1 MB 可以容纳128页。页是数据存储的基本单位。 区 每8个连接的页组成一个区，区的大小是64KB,1MB 的数据库有16个区，区用于控制表和索引的存储。  </description>
    </item>
    
    <item>
      <title>sql server 服务器组件</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E6%95%B0%E6%8D%AE%E5%BA%93/sql-server%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BB%84%E4%BB%B6/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E6%95%B0%E6%8D%AE%E5%BA%93/sql-server%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BB%84%E4%BB%B6/</guid>
      <description>数据库定义 数据库是按照一定的数据模型组织起来并存放在存储介质中的数据集合。他是用来组织和存取大量数据大管理系统。
SQL Server 服务器组件  数据库引擎  用于存储，处理，保护数据的核心服务，如创建数据库，创建表，视图，数据查询，可控制访问权限，快速事务处理等。   分析服务  联机数据处理和数据挖掘   报表服务  SSRS 报表平台 可以用来创建管理包含关系数据源中数据的表格，矩阵报表，图形报表，自由格式报表、   集成服务  SSIS 主要用于清理聚合，合并，复制数据转换以及管理SSIS包，提供生产并调试SSIS包的图形向导工具，执行FTP,电子邮件消息传递等操作。    同理 其他数据库 也应该有对应的服务器组件 </description>
    </item>
    
    <item>
      <title>sql server 表</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E6%95%B0%E6%8D%AE%E5%BA%93/sql-server-%E8%A1%A8/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E6%95%B0%E6%8D%AE%E5%BA%93/sql-server-%E8%A1%A8/</guid>
      <description>数据库定义 数据库是按照一定的数据模型组织起来并存放在存储介质中的数据集合。他是用来组织和存取大量数据大管理系统。
正文 sql Server 表是由行和列构成，又称为二维表。
关键字 用于唯一的标识记录。可以有多个关键字和多个主键。
Sql Server 数据类型   整数型
  精确数值型
  浮点型
  货币型
  位型
  字符型
  Unicode 字符型
  文本型
  二进制型
  日期时间类型
  时间戳型
  图像型
  位型
  其他数据类型（竟然可以 XML ）
  </description>
    </item>
    
    <item>
      <title>T-SQL与SQL基础</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E6%95%B0%E6%8D%AE%E5%BA%93/t-sql%E4%B8%8Esql%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E6%95%B0%E6%8D%AE%E5%BA%93/t-sql%E4%B8%8Esql%E5%9F%BA%E7%A1%80/</guid>
      <description>数据库定义 数据库是按照一定的数据模型组织起来并存放在存储介质中的数据集合。他是用来组织和存取大量数据大管理系统。
正文 SQL语言是关系数据库管理的标准语言，不同的数据库管理系统在SQL 语言基础上进行扩展。T-SQL 是SQL Server 在SQL的基础上增加控制语句和系统函数的扩展。
SQL是应用于数据库的结构化查询语言，是一种非过程性语言，本身不能脱离数据库存在。由数据库系统完成具体的内部操作。
工具使用:DataGrip：https://www.jetbrains.com/datagrip/
创建数据库 T-SQL 这个是普通的创建。这个和SQL 创建是一样的。
1CREATE DATABASE 数据库名; 其他字段内容创建：
1create database 数据库名; 2on( 3name=&amp;#34;数据库名&amp;#34;,filename=&amp;#34;文件存储路径&amp;#34;,size=300mb,filecrowth=1mb 4) 5log on ( 6name=&amp;#34;log文件名&amp;#34;,filename=&amp;#34;log文件地址&amp;#34;,size=30mb,maxsize=1--mb,filegroeth=10% 7)  数据库 最多128个字符。 on 子句，指定数据库文件名和文件组属性。 log on 子句 指定log 文件属性。 Filespec 指定数据文件的属性，给出文件的逻辑名，存储路径，大小以及增长特性。就是on 和log on 的子句之一。 name:filespec 定义的文件名。 Filename :filespes 定义的文件路径。 Size filespes 定义的文件大小。 maxsize filespec 定义的文件最大大小。 filegrowth:指定 filespec 的文件增长量。  针对 数据库文件的增长量是绝对大小，比如说1MB,但是针对log 文件的增长量是百分比 比如说5%;
SQL 在使用 my sql 中就没有其他字段内容。
1CREATE DATABASE 数据库名; 修改数据库 通常修改数据名，存储位置，log 等。</description>
    </item>
    
    <item>
      <title>TODO</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/todo/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/todo/</guid>
      <description>TODO android  Android intent 保存参数与fragment 子fragment 互用。 fragment 无限套娃，是否可以在activity层判断fragment是否包含显示？ Android 加锁 通过手写array 备份activity 批量移除activity与通过intent 设置tag移除activity的区别。 探讨通过加锁机制，统一loading层延时关闭view。 摸鱼 dialogFragment dissmiss 之后通过fragmentmanger 还能获取到吗？ 通过加锁机制对轮转控件进行加强。  java  java 各种设计模式 JAVA 新特性  SQL  android room Android room+Rxjava  杂学 python python 爬虫教学地址
 基于selenium 实现一个自动化测试的那个啥。  </description>
    </item>
    
    <item>
      <title>学士学位句子</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E5%8F%A5%E5%AD%90/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E5%8F%A5%E5%AD%90/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E5%8F%A5%E5%AD%90/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD%E5%8F%A5%E5%AD%90/</guid>
      <description>前言 结束 </description>
    </item>
    
    <item>
      <title>数据库系统与数据库设计</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A8%A1%E6%9D%BF/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A8%A1%E6%9D%BF/</guid>
      <description>数据库定义 数据库是按照一定的数据模型组织起来并存放在存储介质中的数据集合。他是用来组织和存取大量数据大管理系统。</description>
    </item>
    
    <item>
      <title>数据库系统与数据库设计</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/</guid>
      <description>数据库定义 数据库是按照一定的数据模型组织起来并存放在存储介质中的数据集合。他是用来组织和存取大量数据大管理系统。
数据模型  层次模型 网状模型 关系模型  关系数据库 采用支持关系模型。一行Row 为一个元组Tuple.
关系数据库操作称为关系运算，投影，选择，连接是最重要的关系运算。
单目运算:是指运算符包括赋值运算符，算数运算符，逻辑运算符，位移运算符，关系运算符，自增自减运算符。
 选择是指选出满足给定条件的记录，他是从行的角度进行的单目运算，运算对象是一个表，运算结果形成一个新表。 投影是选择表中满足条件的列。他是从列的角度进行单目运算。结果也是形成一个新表。 连接是将两个表中的行按照一定条件横向结合生成新表。连接是双目运算，其操作对象是两个表。  关系中不允许出现相同的元组。</description>
    </item>
    
    <item>
      <title>日常搬砖模板</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%A8%A1%E6%9D%BF/%E6%97%A5%E5%B8%B8%E6%90%AC%E7%A0%96%E6%A8%A1%E6%9D%BF/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%A8%A1%E6%9D%BF/%E6%97%A5%E5%B8%B8%E6%90%AC%E7%A0%96%E6%A8%A1%E6%9D%BF/</guid>
      <description>前言 顺便推一下博客主页
结束 谢谢光临，若觉得还行麻烦点一下赞，若觉得写得垃圾，欢迎批评指正。笔者知道自己文笔和表达能力很弱，如果您可以提供点宝贵的意见不胜感激。谢谢。
今天也可以是元气满满的一天哦。 更新需要审核。更新通常优先更新到gitee上面。
博客主页</description>
    </item>
    
    <item>
      <title>杂学模块</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A8%A1%E6%9D%BF/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A8%A1%E6%9D%BF/</guid>
      <description>前言 结束 </description>
    </item>
    
    <item>
      <title>杂学模块</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E6%9D%82%E5%AD%A6%E6%A8%A1%E6%9D%BF/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E6%9D%82%E5%AD%A6%E6%A8%A1%E6%9D%BF/</guid>
      <description>前言 结束 </description>
    </item>
    
    <item>
      <title>统考英语B作文</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E4%BD%9C%E6%96%87/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb/%E7%BB%9F%E8%80%83%E8%8B%B1%E8%AF%ADb%E4%BD%9C%E6%96%87/</guid>
      <description>第六部分 作文全新版 机考作文大致分以下10类, 精选频率高的8类范文8篇, 议论文12篇, 书信通知等4篇,共计14篇,学会套用 提示: 写作部分满分10分, 即使不能根据要求写出文章, 也不能空白, 写上自己认识的词或句子,都有可能拿到一定的辛苦分. 作文要求80字, 系统会随时告诉你此时字数是多了少,所以一定要写满80字, 最好是写到100字左右. 对于没有基础的考生, 如果遇见完全陌生的考题的话,就套用万能范文,可以拿到4分以上. 注意作文千万不能空白，只要写了就有分数，作文就在下面模板里面，同学们有空多看
万能模板： 适用所有作文类型，如果基础很差， 看不了太多就把以下6小段掌握。 I think (此处抄写作文题目) is an interesting topic. 我认为（作文题目）是一个有趣的话题。 Many people around me are talking about this. 我周围的许多人都在谈论这个。 In my opinion, we should understand 此处抄写作文题目 like this. 在我看来，我们应该明白（作文题目）是这样的。 First, 此处翻译题目中的中文提示1（如果实在不会写，可抄写阅读理解中的意义有关的句子两到三个凑数， 如果能做适当的修改更好。 Second, 此处翻译题目中的中文提示2（如果实在不会写，可抄写阅读理解中的意义有关的句子两到三个凑数， 如果能做适当的修改更好。 In conclusion, let’s pay more and more attention to this together from now on. 总之，从现在开始，让我们越来越关注这个话题。
at length, that is all i want to say,now i want to be stronger ,thanks.</description>
    </item>
    
    <item>
      <title>英语作文模板</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E8%8B%B1%E8%AF%AD%E4%BD%9C%E6%96%87%E6%A8%A1%E6%9D%BF/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%8B%B1%E8%AF%AD/%E8%8B%B1%E8%AF%AD%E4%BD%9C%E6%96%87%E6%A8%A1%E6%9D%BF/</guid>
      <description>前言 这个调调 用于解决英语作文下限。
万能模板： 适用所有作文类型，如果基础很差， 看不了太多就把以下6小段掌握。 *
  I think (此处抄写作文题目) is an interesting topic. 我认为（作文题目）是一个有趣的话题。
  Many people around me are talking about this. 我周围的许多人都在谈论这个。
  In my opinion, we should understand 此处抄写作文题目 like this. 在我看来，我们应该明白（作文题目）是这样的。
  First(首先)/ above all(首先，尤其), 此处翻译题目中的中文提示1（如果实在不会写，可抄写阅读理解中的意义有关的句子两到三个凑数， 如果能做适当的修改更好。
  Second(第2)/(in the next place ), 此处翻译题目中的中文提示2（如果实在不会写，可抄写阅读理解中的意义有关的句子两到三个凑数， 如果能做适当的修改更好。
  In conclusion, let’s pay more and more attention to this together from now on.</description>
    </item>
    
    <item>
      <title>计算机编译原理0</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%860/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E6%9D%82%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%860/</guid>
      <description></description>
    </item>
    
    <item>
      <title>静态网页&#43;Gitee pages 搭建个人主页</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/%E5%A6%82%E4%BD%95%E5%9F%BA%E4%BA%8Egitee-pages-%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%BB%E9%A1%B5/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/%E5%85%B6%E4%BB%96/%E5%A6%82%E4%BD%95%E5%9F%BA%E4%BA%8Egitee-pages-%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%BB%E9%A1%B5/</guid>
      <description>前言 话说，今天逛沸点的时候，看到一个大佬在推他的个人主页，感觉很有意思。
这么好的东西，其实我也想要。那么就开整。需要先找到官方文档 ，毕竟官方提供的才是原汁原味的嘛(但是有些人提供的就没有那个味道了)。
但是呢，东西是一个好东西，可惜我不会。gitee 推荐了3中静态网页方案，Jekyll、Hugo、Hexo ，这个，巧了，我又不会。突然想起大学的老师，老师们好像有教静态网页的吧，巧了，我好像没有去上课。
但是，作为一个成年人，敌方这么努力的守水晶，我都要想办法推掉它的人，岂是这种小问题能够阻挡的。
 Jekyll、Hugo、Hexo 究竟是什么？
Jekyll、Hugo、Hexo 是简单的博客形态的静态站点生产机器。它有一个模版目录，其中包含原始文本格式的文档，通过 Markdown 以及 Liquid 转化成一个完整的可发布的静态网站，你可以发布在任何你喜爱的服务器上。Jekyll、Hugo、Hexo 也可以运行在 码云（Gitee.com） Pages 上，也就是说，你可以使用码云的服务来搭建你的仓库页面、博客或者网站，而且是完全免费的。
Jekyll 使用文档：https://www.jekyll.com.cn/docs/home/ Hugo 使用文档：https://gohugo.io/documentation/ Hexo 使用文档：https://hexo.io/docs/
 通过gieee提供的教程，我看了下这个这几个教程，
我觉得作为一个成年人，应该学会及时止损。摸鱼应该比学习这个有意思多了，是吧。但是，静态网页我好像会？
顺便推一下博客目录
正文 反正都是摸鱼，只要不学习JAVA，sql,Android,c，ndk 之类的都应该算摸鱼吧，这么一想，瞬间就有动力了。这个摸鱼的概率大一点，还是建议看官方文档 。先按照步骤来。
 注册一个gitee 账号https://gitee.com/ (有账号的跳过这一步) 通过自己的账号创建一个公开的项目(个人主页搞私有的，别人访问不到);确定有master 分支 在项目的服务中找到gitee pages 点击，按照步骤一步一步的开始gitee pages 。这个时候你就得到了自己的个人主页的域名了。 在对应的文件夹下面创建一个index.html 文件（这样通过域名访问就不会404了） 最后通过 静态网页或Jekyll、Hugo、Hexo等博客主页生成工具实现自己的主页。 把做好的网页更新上去，然后在项目的服务中找到gitee pages 更新自己的主页。  静态网页 通过gitee pages 的文档我们可以知道，要想基于它创建主页需要下面几点：
 静态网页 必须包含index.html  据说，只要不进行网络请求的网页都可以叫静态网页？那可操作性就很大了啊。比如说，可以通过网络上下载静态网页模板，自己魔改。比如说这个是我从模板王上下载的一个个人主页：
本地是可以打开的。我没有修改的情况下，直接更新到gitee上面，通过gitee给我生成的域名打开。
Emmmm? 好像可以，如果打开的网页没有更新到，需要清理下浏览器缓存就好了。
我们来看一下这个网页的结构：
支持多html结构，css,js 等都可以放到外面。emmmm？vue 那是不是也行？ vue 提供的单页应用是不是也可以？这个就需要自己验证了，毕竟我不会这个。我看了下这个界面的代码，这div 太多了吧。我感觉我不行，我还是试试用博客主页生成工具吧。</description>
    </item>
    
    <item>
      <title></title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/android/android-context/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/android/android-context/</guid>
      <description>前言 我去，上午酝酿了半天，吃饭没有保存，白写了这么多字。有点难受。
说正事吧，Context 这个对象几乎贯穿Android 所有事物。而 像Application，Activity 都是其间接子类。而这么屌的还有很多，这里就不一一列举了，直接上google Android Context 。Context 子类这么多，最常用的也就是 Application 和Activity了，而这两个子类都是有生命周期的。那么这两个子类获取到的Context有什么不同呢？
  Application 和Activity都有自己的生命周期，那么获取到的Context 的也是有生命周期的。
  JAVA 继承实现的关系，Application和Activity 无法直接强制转换。
  顺便推一下博客目录
正文 Application Application 通常都需要自己继承一个，然后在AndroidManifest 的Application节点中 对android:name 进行赋值。在Application 中获取 Context 也非常简单，就是它本身了。Application 也提供了2个获取 Context 的方法。
Application 继承于ContextWrapper，getBaseContext()，getApplicationContext()这两个方法都是ContextWrapper 实现的。
getBaseContext()     待完成，这个调调有点复杂，容我捋一捋、
  getApplicationContext()  待完成。这个调调有点复杂，容我捋一捋、  Activity 中获取Application Activity 继承于ContextThemeWrapper，而ContextThemeWrapper 继承于ContextWrapper。这其中的逻辑就很复杂，但是获取方式很简单：
1getApplication(); fragment 中获取Application Fragment 中可以直接获取到Activity，那么获取Application就需要先获取 Activity.
1getActivity().getApplication(); 直接获取Application 1private static Application getApplicationByReflect() { 2 try { 3 @SuppressLint(&amp;#34;PrivateApi&amp;#34;) 4 Class&amp;lt;?</description>
    </item>
    
    <item>
      <title></title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/android/android%E4%B8%AD%E5%85%B3%E4%BA%8E%E9%94%81%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/android/android%E4%B8%AD%E5%85%B3%E4%BA%8E%E9%94%81%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>前言 顺便推一下博客目录
结束 谢谢光临，若觉得还行麻烦点一下赞，若觉得写得垃圾，欢迎批评指正。笔者知道自己文笔和表达能力很弱，如果您可以提供点宝贵的意见不胜感激。谢谢。
今天也可以是元气满满的一天哦。 更新需要审核。更新通常优先更新到gitee上面。
博客目录</description>
    </item>
    
    <item>
      <title></title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/room/%E6%97%A5%E5%B8%B8%E6%90%AC%E7%A0%96room%E6%9F%A5%E7%9C%8B%E8%A1%A8%E7%BB%93%E6%9E%84/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/room/%E6%97%A5%E5%B8%B8%E6%90%AC%E7%A0%96room%E6%9F%A5%E7%9C%8B%E8%A1%A8%E7%BB%93%E6%9E%84/</guid>
      <description>前言 顺便推一下日常搬砖sqlite目录 。
接上面内容。因为room会生根据 Database成一个 impl.java 文件，通过这个class可以看到创建表的sql。通过查看sqlite studio 需要把几个文件都复制到同一个文件夹中才可以查看完整的表，我通过room 创建的数据库有.db，.db-shm,.db-wal这3个后缀名文件，然后通过Stetho 发现我的id 竟然有两个，但是在Demo 上加上 Stetho 发现 Stetho获取的有一个rowid。emmmm？感觉情况完全不一样，所以我决定看看。
sqlite 查看工具 之前找到了一篇博客对sqlite 表查看写得很详细的。Android Studio查看SQLite数据库方法大全 .如果是通过Stetho 查看数据库，可能出现一个问题，404或者空白页。这个时候就需要使用一些梯子(科学上网)了，等加载出来之后就不需要了。浏览器直接输入chrome://inspect 找到设备就好。
正文 BasicRxJavaSample 这个Demo的地址 。这个Demo是room+rxjava.众所皆知，数据库的增删改查不应该存在于主线程中。好了我们直接看这个Demo所提供的实体类。
实体类 1@Entity(tableName = &amp;#34;users&amp;#34;) 2public class User { 3 4 @NonNull 5 @PrimaryKey 6 @ColumnInfo(name = &amp;#34;userid&amp;#34;) 7 private String mId; 8 9 @ColumnInfo(name = &amp;#34;username&amp;#34;) 10 private String mUserName; 11 12 @Ignore 13 public User(String userName) { 14 mId = UUID.randomUUID().toString(); 15 mUserName = userName; 16 } 17 18 public User(@NonNull String id, String userName) { 19 this.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/room/%E6%97%A5%E5%B8%B8%E6%90%AC%E7%A0%96sqlite%E4%B9%8Broom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/sqlite/room/%E6%97%A5%E5%B8%B8%E6%90%AC%E7%A0%96sqlite%E4%B9%8Broom/</guid>
      <description>前言 欢迎光临。
顺便推一下日常搬砖sqlite目录 。
现在还是主要总结一些简单一点的，太复杂了的还是往后排一下，反正我是记得我留了不少的坑等着填，现在先写这个吧，免得分心又拖更了。
之前有简单的描述了下sqlite的增删改查，google 还是推荐使用room android 的。国内也有很多大佬写的很详细，比如说Android Room 官方指南 这个感觉就很全面详细，我看完我就觉得，这个room 相关的博客我都不用写了，直接复制就好。通过这个大佬的博客呢，我找到了我们的组织 Android 的github 地址。就好比流浪多年的我找到了家的感觉。当然也不是之前不知道，就好比之前不知道家里面有宝贝，突然有一天一个同乡说&amp;quot;我们要拆迁啦，你要回去看看吗？&amp;quot;，我回头一想，&amp;quot;嗯？宝贝？我当初出来打工到处找第3方框架的时候咋没有发现？拆迁了？那我要回去看看&amp;quot;，结果一回去，只见靠近种花家那面墙上已经用红油漆喷了一个不怎么圆的圆。咦，果然是有好宝贝。
说回正题。architecture-components-samples 这个里面就有google 提供的Demo。看到这么多的Demo？我觉得我好像真的没有写room 相关的必要了，要不我给你们说脱口秀？
正文 为啥要使用room 其实，作为用sqlite 一向都是sql 的我再没有写博客之前，我还真的没有仔细想过这个问题。现在比较好友的sqlite的工具还是蛮多的，有点久了，不是这么容易记起来，以后慢慢列举吧。下面还是来说说个人认为的优点吧。
 google 爸爸出品，而且现在已经到Android X了，是Jetpack 重要的一环，也便于升级到Android X，同时jetpack 使用量已经升上去了，出现问题的概率很小，有问题多半是使用有问题。jetpack多半是必会技能，哪怕是面试装杯。 google Demo 在as中导入贼快。可能我这山区才通网，用梯子导别人的Demo都很慢。 通过注解对象关系映射（应该是这个词）不必写创建表的sql，便于表字段约束，同时理解简单很多。同类型的也有好几个。 可以更加简单实现一表一数据库文件。对于哪些不常用的功能表可以整合到单独的数据库文件中，当然直通过SQLiteOpenHelper也可以达到这个效果。更新还是需要每个自己更新，个人感觉分数据库写处理更新逻辑要清晰很多。 通过 dao 注解 便于功能区分，耦合要低很多。通过自己写interface也可以实现。 不要杠，人家提供规则是为了使用方便，而不是为了找到其他相同效果的不同写法。个人感觉最主要的是jetpack，用这个如果想，可以把jetpack 所有组件都用上了。 sqlite 的查询可以直接写到主线程中，而room的相关操作抖需要写到子线程中，所以还可以学一盘rxjava ? 按照道理讲，数据库的读写都应该写到子线程中的。room 中 RoomDatabase 提供了很多约束方法。  好了，代码量和逻辑分化的增加在可以装杯的海量优势面前不值一提。那么我们就可以开整。这篇主要是简单的使用讲解，Demo是基于contentprovidersample
导入room 1def room_version = &amp;#34;1.1.1&amp;#34; 2implementation &amp;#34;android.arch.persistence.room:runtime:$room_version&amp;#34; 3annotationProcessor &amp;#34;android.arch.persistence.room:compiler:$room_version&amp;#34; // use kapt for Kotlin 4// optional - RxJava support for Room 5implementation &amp;#34;android.</description>
    </item>
    
  </channel>
</rss>
