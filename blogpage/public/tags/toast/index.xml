<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>toast on 个人主页</title>
    <link>http://lalalaxiaowifi.gitee.io/pictures/tags/toast/</link>
    <description>Recent content in toast on 个人主页</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2020-2099</copyright><atom:link href="http://lalalaxiaowifi.gitee.io/pictures/tags/toast/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Android自定义Toast</title>
      <link>http://lalalaxiaowifi.gitee.io/pictures/posts/android/android%E8%87%AA%E5%AE%9A%E4%B9%89toast/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://lalalaxiaowifi.gitee.io/pictures/posts/android/android%E8%87%AA%E5%AE%9A%E4%B9%89toast/</guid>
      <description>》 顺便推一下博客主页
前言  话说toast 这个调调 在Android上使用蛮频繁的。通常就是通过自己的自定义，如果不自定义的话，可能会提一个 toast重复提示的bug，虽然这个可以通过其他逻辑控制与限制。 写笔记嘛，那就都写。
 正文 toast 单例  toast 自定义1，单例。直接抄一个阿里的toast 单例。
 1 2public class ToastUtils { 3 4 private static Toast mToast; 5 private static Field mFieldTN; 6 private static Field mFieldTNHandler; 7 8 static { 9 if (Build.VERSION.SDK_INT == 25) { 10 try { 11 mFieldTN = Toast.class.getDeclaredField(&amp;#34;mTN&amp;#34;); 12 mFieldTN.setAccessible(true); 13 mFieldTNHandler = mFieldTN.getType().getDeclaredField(&amp;#34;mHandler&amp;#34;); 14 mFieldTNHandler.setAccessible(true); 15 } catch (Exception e) { 16 e.</description>
    </item>
    
  </channel>
</rss>
